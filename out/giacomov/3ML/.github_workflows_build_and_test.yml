name: CI
on:
    push:
      paths-ignore:
        - "README.md"
        - "**/docs/**"
        - ".github/workflows/docs.yml"

    pull_request:
      branches:
        - master
        - dev

    schedule:
        - cron: "0 11 * * *"

jobs:
    skip_duplicate:
        runs-on: ubuntu-latest
        outputs:
            should_skip: ${{ steps.skip_check.outputs.should_skip }}
        steps:
            - id: skip_check
              uses: fkirc/skip-duplicate-actions@master
              with:
                  github_token: ${{ github.token }}
                  concurrent_skipping: never
                  skip_after_successful_duplicate: true
                  paths_ignore: '["**/README.md", "**/docs/**"]'
                  do_not_skip: '["pull_request",  "schedule"]'

    test-pip:
        name: Test on Pip
        needs: skip_duplicate
        if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
        strategy:
            matrix:
                python-version: [3.7, 3.8]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install --upgrade astromodels
                  pip install --upgrade flake8 coverage pytest-cov cython

                  # temp fix for speclite
                  pip install git+https://github.com/desihub/speclite.git
                  
                  pip install -e .
            - name: Lint with flake8
              run: |
                  # stop the build if there are Python syntax errors or undefined names
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                  flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

            - name: Test pip on ${{ matrix.python-version }}
              run: |
                  python -m pytest -vv --cov=threeML --cov-report=xml
              env:
                  PYTEST_ADDOPTS: "--color=yes"
                  OMP_NUM_THREADS: 1
                  MKL_NUM_THREADS: 1
                  NUMEXPR_NUM_THREADS: 1
                  MPLBACKEND: "Agg"

            # we do not need to run coverage on pip
            # - name: Upload coverage to Codecov
            #   uses: codecov/codecov-action@v1
            #   with:
            #       file: ./coverage.xml
            #       files: ./coverage1.xml,./coverage2.xml
            #       directory: ./coverage/reports/

    test-conda:
        name: Test on Conda
        needs: skip_duplicate
        if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
        strategy:
            matrix:
                os: ["ubuntu-latest", "macos-latest"]
                python-version: [3.7]
        runs-on: ${{ matrix.os }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            
            - name: Cache conda
              uses: actions/cache@v2
              env:
                # Increase this value to reset cache if etc/example-environment.yml has not changed
                CACHE_NUMBER: 0
              with:
                  path: ~/conda_pkgs_dir
                  key: conda-${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('ci/environment.yml') }}
            
            - name: Setup Miniconda
              uses: conda-incubator/setup-miniconda@v2
              with:
                  auto-update-conda: true
                  auto-activate-base: false
                  #mamba-version: "*"
                  activate-environment: test_env
                  python-version: ${{ matrix.python-version }}
                  channels: conda-forge, xspecmodels, threeml, fermi, defaults
                  environment-file: ci/environment.yml
                  use-only-tar-bz2: true

            - name: Init Env
              shell: bash -l {0}
              run: |

                  export PKG_VERSION=$(python -c "import versioneer;print(versioneer.get_version())")

                  echo "HOME= ${HOME}"
                  echo "Building ${PKG_VERSION} ..."
                  echo "Python version: ${{matrix.python-version}}"

            - name: Conda list
              shell: bash -l {0}
              run: |
                  conda list
            - name: install it
              shell: bash -l {0}
              run: |
                  pip install -e .
            - name: Lint with flake8
              shell: bash -l {0}
              run: |
                  # stop the build if there are Python syntax errors or undefined names
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                  flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

            - name: test it
              shell: bash -l {0}
              run: |
                  python -m pytest -vv --cov=threeML --cov-report=xml

              env:
                  PYTEST_ADDOPTS: "--color=yes"
                  OMP_NUM_THREADS: 1
                  MKL_NUM_THREADS: 1
                  NUMEXPR_NUM_THREADS: 1
                  MPLBACKEND: "Agg"

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v1
              with:
                  file: ./coverage.xml
                  files: ./coverage1.xml,./coverage2.xml
                  Directory: ./coverage/reports/

    publish-pypi:
        name: Publish to PyPi
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && (! endsWith(github.ref, 'dev'))
        runs-on: ubuntu-latest
        steps:
            - name: Checkout source
              uses: actions/checkout@v2
            - name: Set up Python 3.7
              uses: actions/setup-python@v1
              with:
                  python-version: 3.7
            - name: Build package
              run: |
                  pip install wheel
                  python setup.py sdist
            - name: Publish
              uses: pypa/gh-action-pypi-publish@v1.1.0
              with:
                  user: __token__
                  password: ${{ secrets.PYPI_TOKEN }}
                  skip-existing: true

    test-publish-pypi:
        name: Build & verify package
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
              with:
                  python-version: 3.8

            - name: Install twine
              run: |
                  python -m pip install twine
            - name: Build package
              run: |
                  python setup.py sdist
            - name: List result
              run: |
                  ls -lh dist
            - name: Check long_description
              run: |
                  python -m twine check dist/*
