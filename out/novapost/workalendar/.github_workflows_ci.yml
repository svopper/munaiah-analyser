name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  # Empty pull request argument means "all pull-requests"
  pull_request:

jobs:
  # 1. linters
  check-lint:
    strategy:
      matrix:
        include:
          - name: flake8
            tox-env: flake8
          - name: pyupgrade
            tox-env: pyupgrade

    name: Check ${{ matrix.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          set -xeu
          python --version
          pip install tox
      - name: Check ${{ matrix.name }}
        run: tox -e ${{ matrix.tox-env }}

  # 2. Unit tests
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        include:
          - python-version: 3.6
            tox-env: py36
          - python-version: 3.7
            tox-env: py37
          - python-version: 3.8
            tox-env: py38
          - python-version: 3.9
            tox-env: py39

    name: Test (python ${{ matrix.python-version }}/${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python --version
          pip install tox coverage
      - name: Run tox targets for ${{ matrix.python-version }}
        run: tox -e ${{ matrix.tox-env }}

  report-status:
    name: success
    runs-on: ubuntu-latest
    needs:
      - check-lint
      - tests
    steps:
      - name: Report success
        run: echo 'Success !'
