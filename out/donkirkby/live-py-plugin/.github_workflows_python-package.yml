# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  - push
  - pull_request

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Keep synchronized with setup.py and tox.ini
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9, 3.10-dev]
    env:
      PYTHON: ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox coverage
#      - name: Set up Emacs
#        uses: purcell/setup-emacs@v3.0
#        with:
#          version: 24.4
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Install Node dependencies
        run: |
          cd html
          npm install
          cd ..
      - name: Test with tox and pytest
        run: |
          if [[ $PYTHON == '2.7' ]]; then python test/PySrc/tests/validate_legacy_python.py && exit || exit 1 ; fi
          python -m tox -e py
#      - name: Test with Emacs
#        id: emacs-tests
#        continue-on-error: true
#        run: |
#          emacs -Q --batch -L emacs-live-py-mode --eval '(setq byte-compile-error-on-warn t)' -f batch-byte-compile emacs-live-py-mode/*.el
#          # Fake a tty with the script command.
#          script -e -temacs-timing -c "emacs -Q -nw -L emacs-live-py-mode -L plugin/PySrc -l live-py-mode.el -l live-py-test.el -f ert-run-tests-batch-and-exit"
#      - name: Display Emacs Test Results
#        if: ${{ steps.emacs-tests.outcome == 'failure' }}
#        run: |
#          scriptreplay emacs-timing
#          exit 1
      - name: Test JavaScript
        run: |
          cd html
          npm test -- --watchAll=false
          cd ..
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          env_vars: PYTHON
