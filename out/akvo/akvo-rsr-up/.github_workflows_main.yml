name: Testing Workflow

# Step 1: Choose the branch or branches you want to run this workflow
on:
  pull_request:
    branches:
      - issue/*
      - develop

jobs:
  testing:
    name: Lint Check and Testing
    
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repo
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Config login details
        env:
          TEST_LOGIN_CONFIG: ${{ secrets.TEST_LOGIN_CONFIG }}
          TEST_PASSWORD_CONFIG: ${{ secrets.TEST_PASSWORD_CONFIG }}
        run: |
          touch local.properties
          echo -e "\n$TEST_LOGIN_CONFIG" >> android/AkvoRSR/local.properties
          echo -e "\n$TEST_PASSWORD_CONFIG" >> android/AkvoRSR/local.properties
          cat local.properties
       
      # Step 2: Check the code with ktlint
      - name: Run Kotlin Linter
        run: ./gradlew ktlint
        working-directory: ./android/AkvoRSR

      # Step 3: Check the code with Android linter
      - name: Run Android Linter
        run: ./gradlew lintDebug
        working-directory: ./android/AkvoRSR

      # Step 4: Assemble debug apk to send to firebase test lab
      - name: Assemble Debug APK
        run: ./gradlew assembleDebug
        working-directory: ./android/AkvoRSR

      # Step 5: Assemble debug test apk to send to firebase test lab
      - name: Assemble Debug Test APK
        run: ./gradlew assembleDebugAndroidTest
        working-directory: ./android/AkvoRSR
      
      - name: Run tests on Firebase Test Lab
        uses: asadmansr/Firebase-Test-Lab-Action@v1.0
        with:
          arg-spec: '.github/test-lab-config.yml:android-pixel-4'
        env:
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
