name: macOS

on: [push, pull_request]

env:
  PYTHON_VER: '3.9.2'
  PYTHON_VER_SHORT: '3.9'
  PYTHON_VER_SHORT_COMPACT: '39'
  PYOTHERSIDE_VER: '1.5.9'
  OPENSSL_VER: '1.1.1i'

jobs:
  build:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.15.1'
          host: 'mac'
          target: 'desktop'

      - name: Install dependencies from homebrew
        run: |
          pip install --upgrade pip
          brew update
          brew install swig zlib curl coreutils

      - name: Setup GPG
        run: |
          curl https://keys.openpgp.org/vks/v1/by-fingerprint/E3FF2839C048B25C084DEBE9B26995E310250568 | gpg --import
          curl "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x7953ac1fbc3dc8b3b292393ed5e9e43f7df9ee8c" -o ./key1.asc
          curl "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x8657ABB260F056B1E5190839D9C4D26D0E604491" -o ./key2.asc
          gpg --import ./key1.asc
          gpg --import ./key2.asc

      - name: Build OpenSSL
        run: |
          wget https://www.openssl.org/source/openssl-${OPENSSL_VER}.tar.gz
          wget https://www.openssl.org/source/openssl-${OPENSSL_VER}.tar.gz.asc
          gpg --verify openssl-${OPENSSL_VER}.tar.gz.asc
          tar -xzvf openssl-${OPENSSL_VER}.tar.gz
          cd openssl-${OPENSSL_VER}
          sudo env MACOSX_DEPLOYMENT_TARGET=10.13 ./config --prefix=/opt/openssl
          sudo env MACOSX_DEPLOYMENT_TARGET=10.13 make
          sudo make install

      - name: Build Python as a framework
        run: |
          wget https://www.python.org/ftp/python/${PYTHON_VER}/Python-${PYTHON_VER}.tgz
          wget https://www.python.org/ftp/python/${PYTHON_VER}/Python-${PYTHON_VER}.tgz.asc
          gpg --verify Python-${PYTHON_VER}.tgz.asc
          tar -xzvf Python-${PYTHON_VER}.tgz
          cd Python-${PYTHON_VER}
          # Make sure gettext is not installed when configuring Python,
          # otherwise it seems to break the linking for PyOtherSide build later.
          # Re-intall after, because it's needed for wget.
          brew uninstall gettext --ignore-dependencies
          brew unlink python@3.9
          ./configure MACOSX_DEPLOYMENT_TARGET=10.13 CPPFLAGS="-I/opt/openssl/include" LDFLAGS="-L/opt/openssl/lib" CC=clang --enable-framework --with-openssl=/opt/openssl --enable-optimizations
          sudo make altinstall
          brew link --overwrite python@3.9
          brew reinstall gettext

      - name: Install python dependencies from source
        run: |
          sudo /Library/Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/bin/pip${PYTHON_VER_SHORT} install --upgrade pip
          sudo env MACOSX_DEPLOYMENT_TARGET=10.13 CFLAGS="-I/opt/openssl/include" LDFLAGS="-L/opt/openssl/lib" /Library/Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/bin/pip${PYTHON_VER_SHORT} install -r requirements.txt
      
      - name: Change id for bundled Python
        run: sudo sed -i '' 's/org.python.python/com.yubico.python/g' /Library/Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/Resources/Python.app/Contents/Info.plist

      - name: Build PyOtherSide QML plugin
        run: |
          wget https://github.com/thp/pyotherside/archive/${PYOTHERSIDE_VER}.tar.gz
          echo "189cb0b973e40fcb6b95fd51b0bcd6cc8494b514d49ffe966ec488cf05bbf51e ${PYOTHERSIDE_VER}.tar.gz" | sha256sum -c -
          tar -xzvf ${PYOTHERSIDE_VER}.tar.gz
          echo "DEFINES += QT_NO_DEBUG_OUTPUT" >> pyotherside-${PYOTHERSIDE_VER}/src/src.pro
          cd pyotherside-${PYOTHERSIDE_VER}
          qmake PYTHON_CONFIG=/Library/Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/bin/python${PYTHON_VER_SHORT}-config
          make
          sudo make install

      - name: Build yubioath-desktop
        run: |
          qmake
          make
          macdeployqt yubioath-desktop.app/ -qmldir=qml/ -appstore-compliant

      - name: Copy over dynamic libraries
        run: |
          sudo find /opt/openssl/ -name '*.dylib' -exec cp '{}' yubioath-desktop.app/Contents/Frameworks/ ';'

      - name: Copy over Python.framework to app bundle
        run: |
          cp -a /Library/Frameworks/Python.framework yubioath-desktop.app/Contents/Frameworks/
          sudo find yubioath-desktop.app/Contents/Frameworks/Python.framework -name '*.pyc' -delete
          sudo find yubioath-desktop.app/Contents/Frameworks/Python.framework -name '__pycache__' -delete

      - name: Point pyotherside to relative Python
        run: |
          sudo install_name_tool -change /Library/Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/Python @executable_path/../Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/Python yubioath-desktop.app/Contents/PlugIns/quick/libpyothersideplugin.dylib
          
      - name: Point custom Python share objects to relative openssl dylibs
        run: |
          sudo install_name_tool -change /opt/openssl/lib/libcrypto.1.1.dylib @executable_path/../Frameworks/libcrypto.1.1.dylib yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/lib/python${PYTHON_VER_SHORT}/lib-dynload/_ssl.cpython-${PYTHON_VER_SHORT_COMPACT}-darwin.so
          sudo install_name_tool -change /opt/openssl/lib/libssl.1.1.dylib @executable_path/../Frameworks/libssl.1.1.dylib yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/lib/python${PYTHON_VER_SHORT}/lib-dynload/_ssl.cpython-${PYTHON_VER_SHORT_COMPACT}-darwin.so
          sudo install_name_tool -change /opt/openssl/lib/libcrypto.1.1.dylib @executable_path/../Frameworks/libcrypto.1.1.dylib yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/lib/python${PYTHON_VER_SHORT}/lib-dynload/_hashlib.cpython-${PYTHON_VER_SHORT_COMPACT}-darwin.so
          sudo install_name_tool -change /opt/openssl/lib/libssl.1.1.dylib @executable_path/../Frameworks/libssl.1.1.dylib yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/lib/python${PYTHON_VER_SHORT}/lib-dynload/_hashlib.cpython-${PYTHON_VER_SHORT_COMPACT}-darwin.so
          sudo install_name_tool -change /opt/openssl/lib/libcrypto.1.1.dylib @executable_path/../Frameworks/libcrypto.1.1.dylib yubioath-desktop.app/Contents/Frameworks/libssl.1.1.dylib
          sudo install_name_tool -change /opt/openssl/lib/libcrypto.1.1.dylib @executable_path/../Frameworks/libcrypto.1.1.dylib yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/lib/python${PYTHON_VER_SHORT}/site-packages/cryptography/hazmat/bindings/_openssl.abi3.so
          sudo install_name_tool -change /opt/openssl/lib/libssl.1.1.dylib @executable_path/../Frameworks/libssl.1.1.dylib yubioath-desktop.app/Contents/Frameworks/Python.framework/Versions/${PYTHON_VER_SHORT}/lib/python${PYTHON_VER_SHORT}/site-packages/cryptography/hazmat/bindings/_openssl.abi3.so

      - name: Rename and archive app bundle
        run: |
          export REF=$(echo ${GITHUB_REF} | cut -d '/' -f 3)
          mv yubioath-desktop.app Yubico\ Authenticator.app
          tar -czf yubioath-desktop-${REF}.app.tar.gz Yubico\ Authenticator.app
          mkdir deploy
          mv yubioath-desktop-${REF}.app.tar.gz deploy

      - name: Uninstall runtime dependencies
        run: |
          brew uninstall openssl@1.1 python libusb --ignore-dependencies
          sudo rm -rf /usr/local/Cellar/qt

      - name: Run GUI
        run: |
          ./Yubico\ Authenticator.app/Contents/MacOS/yubioath-desktop --version
          ./Yubico\ Authenticator.app/Contents/MacOS/yubioath-desktop --help

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: yubioath-desktop-macos-app-bundle
          path: deploy