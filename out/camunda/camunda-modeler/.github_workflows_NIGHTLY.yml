name: NIGHTLY
on:
  schedule:
    - cron: '0 18 * * *'
jobs:
  Build_nightly:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-10.15, windows-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 'lts/*'
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          ${{ runner.os }}-
    - name: Install dependencies
      run: npm ci

    - name: Build nightly (Linux)
      if: ${{ runner.os == 'Linux' }}
      env:
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_NIGHTLY_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_NIGHTLY_SECRET_ACCESS_KEY }}"
        AWS_REGION: "${{ secrets.AWS_NIGHTLY_REGION }}"
        AWS_BUCKET: "${{ secrets.AWS_NIGHTLY_BUCKET }}"
        CSC_LINK: "${{ secrets.CSC_LINK }}"
        CSC_KEY_PASSWORD: "${{ secrets.CSC_KEY_PASSWORD }}"
        ET_ENDPOINT: "${{ secrets.ET_ENDPOINT }}"
        SENTRY_AUTH_TOKEN: "${{ secrets.SENTRY_AUTH_TOKEN }}"
        SENTRY_DSN: "${{ secrets.SENTRY_DSN }}"
        SENTRY_ORG: "${{ secrets.SENTRY_ORG }}"
        SENTRY_PROJECT: "${{ secrets.SENTRY_PROJECT }}"
        UPDATES_SERVER_PRODUCT_NAME: "${{ secrets.UPDATES_SERVER_PRODUCT_NAME }}"
      run: npm run build -- --linux --publish --nightly

    - name: Build nightly (MacOS)
      if: ${{ runner.os == 'macOS' }}
      env:
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_NIGHTLY_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_NIGHTLY_SECRET_ACCESS_KEY }}"
        AWS_REGION: "${{ secrets.AWS_NIGHTLY_REGION }}"
        AWS_BUCKET: "${{ secrets.AWS_NIGHTLY_BUCKET }}"
        APPLE_DEVELOPER_ID: "${{ secrets.APPLE_DEVELOPER_ID }}"
        APPLE_DEVELOPER_ID_PASSWORD: "${{ secrets.APPLE_DEVELOPER_ID_PASSWORD }}"
        CSC_LINK: "${{ secrets.CSC_LINK }}"
        CSC_KEY_PASSWORD: "${{ secrets.CSC_KEY_PASSWORD }}"
        ET_ENDPOINT: "${{ secrets.ET_ENDPOINT }}"
        SENTRY_AUTH_TOKEN: "${{ secrets.SENTRY_AUTH_TOKEN }}"
        SENTRY_DSN: "${{ secrets.SENTRY_DSN }}"
        SENTRY_ORG: "${{ secrets.SENTRY_ORG }}"
        SENTRY_PROJECT: "${{ secrets.SENTRY_PROJECT }}"
        UPDATES_SERVER_PRODUCT_NAME: "${{ secrets.UPDATES_SERVER_PRODUCT_NAME }}"
      run: npm run build -- --mac --publish --nightly

    - name: Build nightly (Windows)
      if: ${{ runner.os == 'Windows' }}
      env:
        AWS_ACCESS_KEY_ID: "${{ secrets.AWS_NIGHTLY_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_NIGHTLY_SECRET_ACCESS_KEY }}"
        AWS_REGION: "${{ secrets.AWS_NIGHTLY_REGION }}"
        AWS_BUCKET: "${{ secrets.AWS_NIGHTLY_BUCKET }}"
        CSC_LINK: "${{ secrets.WIN_CSC_LINK }}"
        CSC_KEY_PASSWORD: "${{ secrets.WIN_CSC_KEY_PASSWORD }}"
        ET_ENDPOINT: "${{ secrets.ET_ENDPOINT }}"
        SENTRY_AUTH_TOKEN: "${{ secrets.SENTRY_AUTH_TOKEN }}"
        SENTRY_DSN: "${{ secrets.SENTRY_DSN }}"
        SENTRY_ORG: "${{ secrets.SENTRY_ORG }}"
        SENTRY_PROJECT: "${{ secrets.SENTRY_PROJECT }}"
        UPDATES_SERVER_PRODUCT_NAME: "${{ secrets.UPDATES_SERVER_PRODUCT_NAME }}"
      run: npm run build -- --win --publish --nightly

  Post-Failure:
    needs: Build_nightly
    if: failure()
    runs-on: ubuntu-latest
    steps:
    - name: Post to a Slack channel
      uses: slackapi/slack-github-action@v1.15.0
      with:
        channel-id: ${{ secrets.SLACK_CHANNEL_ID }}
        slack-message: "Nightly build failed. <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Go to the build.>"
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
