name: Run tests on a pr

on:
  # run on pull request to master excluding changes that are only on doc or example folders
  pull_request:
    branches:
      - master
    paths-ignore:
      - "examples/**"

env:
  # global env to all steps
  TOX_WORKERS: -n2

jobs:
  run-test-amd64:
    name: ${{ matrix.python-version }}-${{ matrix.build-type }}-${{ matrix.architecture }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # run this job using this matrix, excluding some combinations below.
      matrix:
        os:
          - "ubuntu-latest"
        python-version:
          - "2.7"
          - "3.9"
        build-type:
          - "cext"
          - "nocext"
        architecture:
          - x64
      # abort all jobs as soon as one fails
      fail-fast: true

    # steps to run in each job. Some are github actions, others run shell commands
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade tox setuptools
          pip list

      - name: Run tests
        run: tox -e github-${{ matrix.build-type }} -- -q --nomemory --notimingintensive ${{ matrix.pytest-args }}

  run-mypy:
    name: mypy-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      # run this job using this matrix, excluding some combinations below.
      matrix:
        os:
          - "ubuntu-latest"
        python-version:
          - "3.9"

      fail-fast: false

    # steps to run in each job. Some are github actions, others run shell commands
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade tox setuptools
          pip list

      - name: Run tests
        run: tox -e mypy ${{ matrix.pytest-args }}

  run-pep8:
    name: pep8-${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      # run this job using this matrix, excluding some combinations below.
      matrix:
        os:
          - "ubuntu-latest"
        python-version:
          - "3.9"

      fail-fast: false

    # steps to run in each job. Some are github actions, others run shell commands
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade tox setuptools
          pip list

      - name: Run tests
        run: tox -e pep8

  # Arm emulation is quite slow (~20min) so for now just run it when merging to master
  # run-test-arm64:
  #   name: ${{ matrix.python-version }}-${{ matrix.build-type }}-arm64-ubuntu-latest
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version:
  #         - "3.9"
  #       build-type:
  #         - "cext"
  #         - "nocext"
  #     fail-fast: true

  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2

  #     - name: Set up emulation
  #       run: |
  #         docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

  #     - name: Run tests
  #       uses: docker://arm64v8/python:3.8-buster
  #       with:
  #         args: |
  #               bash -c "
  #               python -m pip install --upgrade pip &&
  #               pip install --upgrade tox setuptools &&
  #               pip list &&
  #               tox -e github-${{ matrix.build-type }} -- -q --nomemory --notimingintensive ${{ matrix.pytest-args }}"
