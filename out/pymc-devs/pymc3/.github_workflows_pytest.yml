name: pytest

on:
  pull_request:
  push:
    branches: [main]


# Tests are split into multiple jobs to accelerate the CI.
# Different jobs should be organized to take approximately the same
# time to complete (and not be prohibitely slow).
# Because GitHub Actions don't support YAML anchors, we have to place the
# splitting of testfiles into groups in the strategy/matrix/test-subset
# and can't re-use the groups across jobs.
# A pre-commit hook (scripts/check_all_tests_are_covered.py)
# enforces that test run just once per OS / floatX setting.

jobs:
  ubuntu:
    strategy:
      matrix:
        os: [ubuntu-18.04]
        floatx: [float32, float64]
        test-subset:
        # How this works:
        # 1st block: Only passes --ignore parameters to pytest.
        # → pytest will run all test_*.py files that are NOT ignored.
        #
        # Subsequent blocks: Only pass paths to test files.
        # → pytest will run only these files
          - |
            --ignore=pymc/tests/test_distributions_timeseries.py
            --ignore=pymc/tests/test_initial_point.py
            --ignore=pymc/tests/test_mixture.py
            --ignore=pymc/tests/test_model_graph.py
            --ignore=pymc/tests/test_modelcontext.py
            --ignore=pymc/tests/test_parallel_sampling.py
            --ignore=pymc/tests/test_posteriors.py
            --ignore=pymc/tests/test_sampling.py
            --ignore=pymc/tests/test_profile.py
            --ignore=pymc/tests/test_step.py
            --ignore=pymc/tests/test_tuning.py
            --ignore=pymc/tests/test_transforms.py
            --ignore=pymc/tests/test_variational_inference.py
            --ignore=pymc/tests/test_sampling_jax.py
            --ignore=pymc/tests/test_dist_math.py
            --ignore=pymc/tests/test_minibatches.py
            --ignore=pymc/tests/test_pickling.py
            --ignore=pymc/tests/test_plots.py
            --ignore=pymc/tests/test_updates.py
            --ignore=pymc/tests/test_gp.py
            --ignore=pymc/tests/test_model.py
            --ignore=pymc/tests/test_model_func.py
            --ignore=pymc/tests/test_ode.py
            --ignore=pymc/tests/test_posdef_sym.py
            --ignore=pymc/tests/test_quadpotential.py
            --ignore=pymc/tests/test_shape_handling.py
            --ignore=pymc/tests/test_distributions.py
            --ignore=pymc/tests/test_distributions_random.py
            --ignore=pymc/tests/test_idata_conversion.py

          - |
            pymc/tests/test_initial_point.py
            pymc/tests/test_distributions.py

          - |
            pymc/tests/test_modelcontext.py
            pymc/tests/test_dist_math.py
            pymc/tests/test_minibatches.py
            pymc/tests/test_pickling.py
            pymc/tests/test_plots.py
            pymc/tests/test_updates.py
            pymc/tests/test_transforms.py

          - |
            pymc/tests/test_parallel_sampling.py
            pymc/tests/test_sampling.py
            pymc/tests/test_tuning.py
            pymc/tests/test_posteriors.py

          - |
            pymc/tests/test_idata_conversion.py
            pymc/tests/test_distributions_random.py
            pymc/tests/test_distributions_timeseries.py
            pymc/tests/test_gp.py
            pymc/tests/test_model.py
            pymc/tests/test_model_func.py
            pymc/tests/test_model_graph.py
            pymc/tests/test_ode.py
            pymc/tests/test_posdef_sym.py
            pymc/tests/test_profile.py
            pymc/tests/test_quadpotential.py
            pymc/tests/test_shape_handling.py
            pymc/tests/test_step.py

      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      TEST_SUBSET: ${{ matrix.test-subset }}
      AESARA_FLAGS: floatX=${{ matrix.floatx }},gcc__cxxflags='-march=native'
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if environment-test-py37.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('conda-envs/environment-test-py37.yml') }}
      - name: Cache multiple paths
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if requirements.txt has not changed
          CACHE_NUMBER: 0
        with:
          path: |
            ~/.cache/pip
            $RUNNER_TOOL_CACHE/Python/*
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-build-${{ matrix.python-version }}-${{
            hashFiles('requirements.txt') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: pymc-test-py37
          channel-priority: strict
          environment-file: conda-envs/environment-test-py37.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Install-pymc
        run: |
          conda activate pymc-test-py37
          pip install -e .
          pip install --pre -U polyagamma
          python --version
      - name: Run tests
        run: |
          conda activate pymc-test-py37
          python -m pytest -vv --cov=pymc --cov-append --cov-report=xml --cov-report term --durations=50 $TEST_SUBSET
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
  windows:
    strategy:
      matrix:
        os: [windows-latest]
        floatx: [float32, float64]
        test-subset:
          - |
            pymc/tests/test_initial_point.py
            pymc/tests/test_distributions_random.py
            pymc/tests/test_distributions_timeseries.py
          - |
            pymc/tests/test_parallel_sampling.py
            pymc/tests/test_sampling.py
            pymc/tests/test_tuning.py
            pymc/tests/test_shared.py
            pymc/tests/test_types.py
          - |
            pymc/tests/test_gp.py
            pymc/tests/test_ode.py
          - |
            pymc/tests/test_model.py
            pymc/tests/test_model_func.py
            pymc/tests/test_modelcontext.py
            pymc/tests/test_model_graph.py
            pymc/tests/test_pickling.py
            pymc/tests/test_profile.py

      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      TEST_SUBSET: ${{ matrix.test-subset }}
      AESARA_FLAGS: floatX=${{ matrix.floatx }},gcc__cxxflags='-march=core2'
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if conda-envs/environment-test-py38.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('conda-envs/windows-environment-test-py38.yml') }}
      - name: Cache multiple paths
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if requirements.txt has not changed
          CACHE_NUMBER: 0
        with:
          path: |
            ~/.cache/pip
            $RUNNER_TOOL_CACHE/Python/*
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-build-${{ matrix.python-version }}-${{
            hashFiles('requirements.txt') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: pymc-test-py38
          channel-priority: strict
          environment-file: conda-envs/windows-environment-test-py38.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Install-pymc
        run: |
          conda activate pymc-test-py38
          pip install -e .
          pip install --pre -U polyagamma
          python --version
      - name: Run tests
        # This job uses a cmd shell, therefore the environment variable syntax is different!
        # The ">-" in the next line replaces newlines with spaces (see https://stackoverflow.com/a/66809682).
        run: >-
          conda activate pymc-test-py38 &&
          python -m pytest -vv --cov=pymc --cov-append --cov-report=xml --cov-report term --durations=50 %TEST_SUBSET%
