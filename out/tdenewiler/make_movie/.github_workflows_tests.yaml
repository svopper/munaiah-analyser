---
name: Statick

on: # NOLINT
  pull_request:
  push:
  schedule:
    - cron: '0 3 * * MON'
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        python-version: [3.6, 3.7, 3.8, 3.9, 3.10.0-rc.2]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v1
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade mypy
          python -m pip install --upgrade statick
          python -m pip install --upgrade statick-md
          python -m pip install --upgrade -r requirements.txt

      - name: Install tools
        run: |
          sudo apt update
          sudo apt install ffmpeg
          sudo apt install mp3wrap

      # Have to install newer version from non-apt source due to SSL library compatibility issues.
      - name: Install node
        run: |
          sudo apt install curl
          curl -sL https://deb.nodesource.com/setup_14.x -o nodesource_setup.sh
          sudo bash nodesource_setup.sh
          sudo apt install nodejs
          sudo npm install -g n
          sudo n stable
          sudo npm install -g markdownlint-cli@0.21.0
          rm nodesource_setup.sh

      - name: Test with mypy
        run: |
          mypy --ignore-missing-imports --strict make_movie.py

      - name: Statick
        run: |
          statick . --check --user-paths statick_config --log info
