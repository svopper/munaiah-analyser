name: "geonetwork"
on:
  push:
    paths:
      - "commons/**"
      - "security-proxy-spring-integration/**"
      - "geonetwork/**"
      - ".github/workflows/geonetwork.yml"
  pull_request:
    paths:
      - "commons/**"
      - "security-proxy-spring-integration/**"
      - "geonetwork/**"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
    - name: "Checking out"
      uses: actions/checkout@v1

    - name: "Checking out submodules"
      run: git submodule update --init --recursive --depth 1 geonetwork/

    - name: "Setting up Java"
      uses: actions/setup-java@v1
      with:
        java-version: '8.x'

    - name: "Configuring Maven"
      run: |
          mkdir -p $HOME/.m2
          # Could not find artifact com.sun.media:jai-codec:jar:1.1.3 in artifactory-georchestra
          # cp .github/resources/m2-settings.xml $HOME/.m2/settings.xml

    - name: "Maven repository caching"
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: "Build Georchestra dependencies"
      run: ./mvnw install -pl :security-proxy-spring-integration,testcontainers --also-make -P-all -T1C -ntp -B -Dfmt.action=validate -Dadditionalparam=-Xdoclint:none
      # note "-pl :datafeeder --also-make" builds only the project and its dependencies

    - name: "Build GeoNetwork"
      working-directory: geonetwork/
      run: ../mvnw install -DskipTests -T1C -ntp -B -Dadditionalparam=-Xdoclint:none

    - name: "Run Georchestra Integration Tests"
      working-directory: geonetwork/georchestra-integration/
      run: ../../mvnw verify -ntp -Dadditionalparam=-Xdoclint:none

    - name: Getting image tag
      if: github.repository == 'georchestra/georchestra'
      id: version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: "Build GeoNetwork docker image"
      if: github.repository == 'georchestra/georchestra'
      run: |
        cd geonetwork/web
        ../../mvnw package docker:build -Pdocker -DdockerImageName=georchestra/geonetwork -DdockerImageTags=${{ steps.version.outputs.VERSION }},latest -DskipTests

    - name: "Logging in docker.io"
      uses: azure/docker-login@v1
      if: github.repository == 'georchestra/georchestra'
      with:
        username: '${{ secrets.DOCKER_HUB_USERNAME }}'
        password: '${{ secrets.DOCKER_HUB_PASSWORD }}'

    - name: "Pushing latest to docker.io"
      if: github.ref == 'refs/heads/master' && github.repository == 'georchestra/georchestra'
      run: |
        docker push georchestra/geonetwork:latest

    - name: "Pushing release branch to docker.io"
      if: contains(github.ref, 'refs/heads/21.') && github.repository == 'georchestra/georchestra'
      run: |
        docker push georchestra/geonetwork:${{ steps.version.outputs.VERSION }}

    - name: "Pushing release tag to docker.io"
      if: contains(github.ref, 'refs/tags/21.') && github.repository == 'georchestra/georchestra'
      run: |
        docker push georchestra/geonetwork:${{ steps.version.outputs.VERSION }}

    - name: "Remove SNAPSHOT jars from repository"
      run: |
        find .m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
