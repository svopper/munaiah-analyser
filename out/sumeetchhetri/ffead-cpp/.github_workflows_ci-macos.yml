name: Macos

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  macos:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip_build]')"
    strategy:
      matrix:
        os: [macOS-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        #brew unlink bazel
        brew install libpq openssl@1.1 ossp-uuid unixodbc libmemcached boost jsoncpp apr apr-util pkgconfig httpd ninja
        if [ -f /usr/local/lib/libssl.dylib ]; then
          sudo mv /usr/local/lib/libssl.dylib /usr/local/lib/libssl_bak.dylib
        fi
        if [ -f /usr/local/lib/libcrypto.dylib ]; then
          sudo mv /usr/local/lib/libcrypto.dylib /usr/local/lib/libcrypto_bak.dylib
        fi
        if [ -f /usr/local/Cellar/openssl@1.1/1.1.1g/lib/libssl.1.1.dylib ]; then
          sudo ln -s /usr/local/Cellar/openssl@1.1/1.1.1g/lib/libssl.1.1.dylib /usr/local/lib/libssl.dylib
        fi
        if [ -f /usr/local/Cellar/openssl@1.1/1.1.1g/lib/libcrypto.1.1.dylib ]; then
          sudo ln -s /usr/local/Cellar/openssl@1.1/1.1.1g/lib/libcrypto.1.1.dylib /usr/local/lib/libcrypto.dylib
        fi
        if [ -d /usr/local/include/openssl ]; then
        	sudo mv /usr/local/include/openssl /usr/local/include/openssl_bak
        fi
        if [ -d /usr/local/Cellar/openssl@1.1/1.1.1g/include ]; then
        	sudo ln -s /usr/local/Cellar/openssl@1.1/1.1.1g/include /usr/local/include/openssl
        fi
        pushd /tmp
        wget -q https://github.com/efficient/libcuckoo/archive/master.zip
        unzip master.zip
        rm -f master.zip
        cd libcuckoo-master
        cmake -DCMAKE_INSTALL_PREFIX=/usr/local . && sudo make install
        cd /tmp
        rm -rf libcuckoo-master
        wget -q https://github.com/mongodb/mongo-c-driver/releases/download/1.4.2/mongo-c-driver-1.4.2.tar.gz
        tar xf mongo-c-driver-1.4.2.tar.gz
        rm -f mongo-c-driver-1.4.2.tar.gz
        cd mongo-c-driver-1.4.2/ && ./configure --disable-automatic-init-and-cleanup && make && sudo make install
        cd /tmp
        rm -rf mongo-c-driver-1.4.2
        wget -q https://github.com/redis/hiredis/archive/v1.0.0.tar.gz
        tar xf v1.0.0.tar.gz
        rm -f v1.0.0.tar.gz
        cd hiredis-1.0.0/
        cmake . && sudo make install
        rm -rf hiredis-1.0.0
        popd

    - name: Install ffead-cpp
      run: |
        sed -i'' -e 's/1.13.1/1.19.1/g' modules/nginx_mod_ffeadcpp/CMakeLists.txt
        cmake -DSRV_EMB=on -DMOD_REDIS=on -DMOD_SDORM_MONGO=on -GNinja .
        sudo ninja install
        cd ffead-cpp-6.0-bin
        sudo chmod 755 *.sh resources/*.sh rtdcf/autotools/*.sh
        #sed -i'' -e "s|<init>TeBkUmRouter.updateCache</init>||g" web/te-benchmark-um/config/cache.xml
        #sed -i'' -e "s|<init>TeBkRestController.updateCache</init>||g" web/te-benchmark/config/cache.xml
        sudo ./server.sh &
        COUNTER=0
        while [ ! -f lib/libinter.dylib ]
        do
          sleep 1
          COUNTER=$((COUNTER+1))
          if [ "$COUNTER" = 240 ]
          then
          	cat logs/jobs.log
            echo "ffead-cpp exiting due to failure...."
            exit 1
          fi
        done
        COUNTER=0
        while [ ! -f lib/libdinter.dylib ]
        do
          sleep 1
          COUNTER=$((COUNTER+1))
          if [ "$COUNTER" = 240 ]
          then
          	cat logs/jobs.log
            echo "ffead-cpp exiting exiting due to failure....dlib"
            exit 1
          fi
        done
        echo "ffead-cpp start successful"
        sleep 15
        cd tests
        sudo chmod +x *.sh
        sudo ./runTests.sh
        echo "ffead-cpp normal shutdown"
        sudo pkill ffead-cpp
