name: Windows Cygwin

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  windows-cywgin:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip_build]')"
    strategy:
      matrix:
        os: [windows-2019]
        vs: [2019]
    steps:
    - uses: actions/checkout@v2
    - name: Install cygwin
      run: |
        choco install -y cygwin
        choco install -y cyg-get
        cyg-get gcc gcc-g++ autmake patch bzip2 perl tar xz autoconf automake m4 libtool make zlib-devel zlib cmake git libpq-devel curl libcurl-devel libuuid-devel gdb libssl-devel wget dos2unix unzip
    - name: Set ENV
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      run: |
        echo '::set-env name=PATH::C:\tools\cygwin\bin;C:\tools\cygwin\usr\bin'
    - name: Install dependencies and ffead-cpp
      run: |
        bash --login -c "cd /tmp && wget https://raw.githubusercontent.com/sumeetchhetri/ffead-cpp/master/docker/install_cygwin.sh && dos2unix install_cygwin.sh && chmod +x install_cygwin.sh && ./install_cygwin.sh"
        #set ErrorLevel=%ErrorLevel%
        #IF ($ErrorLevel -ne 0) { exit 1 }
        #exit 0
