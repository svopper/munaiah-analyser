name: Linux CI

on: [push, pull_request]

jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    env:
      CTEST_OUTPUT_ON_FAILURE: ON
      CTEST_PARALLEL_LEVEL: 2

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: ubuntu-20.04-gcc-10
            os: ubuntu-20.04
            compiler: gcc
            version: "10"

          - name: ubuntu-20.04-gcc-10-conan
            os: ubuntu-20.04
            compiler: gcc
            version: "10"
            conan: true
            cmake-args: -DCMAKE_PREFIX_PATH=`pwd`/build -DCMAKE_MODULE_PATH=`pwd`/build

          - name: ubuntu-20.04-clang-10
            os: ubuntu-20.04
            compiler: clang
            version: "10"
            cmake-args: -DAUTOBAHN_USE_LIBCXX=NO

          - name: ubuntu-20.04-clang-10-conan
            os: ubuntu-20.04
            compiler: clang
            version: "10"
            conan: true
            cmake-args: -DCMAKE_PREFIX_PATH=`pwd`/build -DCMAKE_MODULE_PATH=`pwd`/build -DAUTOBAHN_USE_LIBCXX=NO

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install
        run: |
          python -m pip install cmake==3.17.3 conan==1.28.1 --upgrade

          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main' -y
          sudo apt update

          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
            echo "::set-env name=CC::gcc-${{ matrix.version }}"
            echo "::set-env name=CXX::g++-${{ matrix.version }}"
          else
            sudo apt-get install -y clang-${{ matrix.version }} clang-tidy-${{ matrix.version }} g++-multilib
            echo "::set-env name=CC::clang-${{ matrix.version }}"
            echo "::set-env name=CXX::clang++-${{ matrix.version }}"
          fi

      - name: Install dependencies (system)
        run: sudo apt-get install -y libboost-all-dev libmsgpack-dev libwebsocketpp-dev
        if: ${{ !matrix.conan }}

      - name: Install dependencies (conan)
        run: |
          conan profile new default --detect --force
          conan profile update settings.compiler.libcxx=libstdc++11 default
          mkdir -p build && cd build
          conan install .. --build=missing
        if: ${{ matrix.conan }}

      - name: Build
        run: |
          cmake -S . -B build ${{ matrix.cmake-args }} -DCMAKE_BUILD_TYPE=Debug
          cmake --build build --config Debug
