name: Build Mac OS X & Windows wheels and upload to PyPI upon release

# Update on every push and PR to master, and upon release creation
on:
  push:
    branches:    
      - master
    paths-ignore:
      - 'doc/**'
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'doc/**'
  release:
    types: [created]

jobs:
  build:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest,windows-latest]
        python-version: [3.6,3.7,3.8,3.9]
    steps:
      # check-out this repository
      - uses: actions/checkout@v2
      # Install Miniconda, as specificed by this repository's environment.yml
      - uses: conda-incubator/setup-miniconda@v2
        with:
           activate-environment: galpywheels
           environment-file: .github/conda-build-environment-${{ matrix.os }}.yml
           python-version: ${{ matrix.python-version }}
      - name: Install pip dependencies
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip
          pip install wheel
      - name: Set environment variables on Mac OS
        if: matrix.os == 'macos-latest'
        shell: bash -l {0}
        run: |
          echo "CFLAGS=-I$CONDA_PREFIX/include" >> $GITHUB_ENV
          echo "LDFLAGS=-L$CONDA_PREFIX/lib" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=-L$CONDA_PREFIX/lib" >> $GITHUB_ENV
      - name: Set environment variables on Windows
        if: matrix.os == 'windows-latest'
        shell: bash -l {0}
        run: |
          echo "INCLUDE=$CONDA_PREFIX\\Library\\include" >> $GITHUB_ENV
          echo "LIB=$CONDA_PREFIX\\Library\\lib" >> $GITHUB_ENV
          echo "LIBPATH=$CONDA_PREFIX\\Library\\lib" >> $GITHUB_ENV
      - name: Build extension
        shell: bash -l {0}
        run: |
          mkdir wheelhouse
          python setup.py build_ext
      - name: Build wheel
        shell: bash -l {0}
        run: python setup.py bdist_wheel -d wheelhouse
      # Upload wheel as artifact
      - uses: actions/upload-artifact@v2-preview
        with:
          name: galpy-wheel-python-${{ matrix.python-version }}-${{ matrix.os }}
          path: wheelhouse/*.whl
# We need to run on Ubuntu for pypa/gh-action-pypi-publish action
# so might as well also combine
  combine:
    name: Combine wheels into single artifact and upload to PyPI upon release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: |
          mkdir tmp_wheelhouse
          mkdir wheelhouse
      - uses: actions/download-artifact@v2-preview
        with:
          path: tmp_wheelhouse/
      - run: find tmp_wheelhouse/ -mindepth 2 -type f -exec mv -i '{}' wheelhouse/ ';'
      - uses: actions/upload-artifact@v2-preview
        with:
          name: galpy-wheels-macos-windows-latest
          path: wheelhouse/*.whl
      # Upload to PyPI if this is a release
      - name: Publish distribution to PyPI
        if: github.event_name == 'release' && github.event.action == 'created'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_token }}
          packages_dir: wheelhouse/
