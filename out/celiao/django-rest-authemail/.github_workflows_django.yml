name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
        django-version: [2.2.8, 2.2.13, 3.0, 3.1, 3.2]
        djangorestframework-version: [3.11.2, 3.12.4]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        cd example_project
        pip install -r requirements.txt
        pip install coverage
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --exclude=build,migrations --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run Tests
      env:
        AUTHEMAIL_EMAIL_BCC: ${{ secrets.AUTHEMAIL_EMAIL_BCC }}
        AUTHEMAIL_EMAIL_FROM: ${{ secrets.AUTHEMAIL_EMAIL_FROM }}
        AUTHEMAIL_EMAIL_HOST: ${{ secrets.AUTHEMAIL_EMAIL_HOST }}
        AUTHEMAIL_EMAIL_HOST_PASSWORD: ${{ secrets.AUTHEMAIL_EMAIL_HOST_PASSWORD }}
        AUTHEMAIL_EMAIL_HOST_USER: ${{ secrets.AUTHEMAIL_EMAIL_HOST_USER }}
        AUTHEMAIL_EMAIL_PORT: ${{ secrets.AUTHEMAIL_EMAIL_PORT }}
      run: |
        cd example_project
        coverage run --source=.,authemail --omit="*/migrations/*" manage.py test authemail
        coverage report -m
        coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./example_project/coverage.xml
        name: codecov-django-rest-authemail
