name: CI
on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            max-parallel: 2
            fail-fast: false
            matrix:
                php-version: [
                        "7.2",
                        "7.3",
                        "7.4",
                        "8.0",
                        "8.1"
                ]
                composer-param: [
                        "update --no-progress --prefer-source --prefer-lowest",
                        "update --no-progress --prefer-source"
                ]
        name: PHP ${{ matrix.php-version }} test
        steps:
            -   name: checkout project
                uses: actions/checkout@v2

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-version }}
                    extensions: bcmath
                    tools: composer:v2
                    # For PHPUnit code coverage, we need xdebug
                    coverage: xdebug

            -   name: Validate composer.json and composer.lock
                run: composer validate

#            -   name: Cache Composer packages
#                id: composer-cache
#                uses: actions/cache@v2
#                with:
#                    path: vendor
#                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#                    restore-keys: |
#                        ${{ runner.os }}-php-

            -   name: Install dependencies
#                if: steps.composer-cache.outputs.cache-hit != 'true'
                run: composer ${{ matrix.composer-param }}

            # Run phpunit with code coverage
            -   name: PHPUnit Tests
                run: vendor/bin/phpunit --coverage-clover=coverage.clover

            # For code coverage report we are uploading our code coverage report to scrutinizer
            -   name: Downloading scrutinizer ocular.phar
                run: wget https://scrutinizer-ci.com/ocular.phar

            # Uploading reports for analysis
            -   name: Upload code-coverage to scrutinizer
                run: php ocular.phar code-coverage:upload --format=php-clover coverage.clover
