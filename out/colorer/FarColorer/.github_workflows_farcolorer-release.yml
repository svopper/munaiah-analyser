name: Release

on:
  push:
    tags:
      - "v*"

jobs:

  build-artifacts:
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64, x86 ]
        include:
          - arch: x64
            triplet: x64-windows-static
          - arch: x86
            triplet: x86-windows-static

    env:
      X_VCPKG_NUGET_ID_PREFIX: 'farcolorer'
      BUILD_TYPE: Release
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

    runs-on: windows-2019
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Add C++ build tools to PATH
        uses: ilammy/msvc-dev-cmd@v1.5.0
        with:
          arch: ${{ matrix.arch }}

      - name: Install vcpkg
        run: |
          cd external\vcpkg
          .\bootstrap-vcpkg.bat
          curl -LO https://github.com/colorer/github_tools/releases/download/vcpkg12.09.2021/vcpkg.exe
        # replace vcpkg with patched version (X_VCPKG_NUGET_ID_PREFIX)

      - name: Setup NuGet Credentials for vpckg cache
        shell: bash
        run: >
          `$VCPKG_INSTALLATION_ROOT/vcpkg fetch nuget | tail -n 1`
          sources add
          -source "https://nuget.pkg.github.com/colorer/index.json"
          -storepasswordincleartext
          -name "GitHub"
          -username "${{ secrets.PACKAGES_GITHUB_USER }}"
          -password "${{ secrets.PACKAGES_GITHUB_TOKEN }}"

      - name: Create Build forlder
        run: cmake -E make_directory build

      - name: Configure CMake
        shell: bash
        working-directory: build
        run: >
          cmake $GITHUB_WORKSPACE -G "Ninja" -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCOLORER_BUILD_ARCH=${{ matrix.arch }}
          -DCMAKE_TOOLCHAIN_FILE=$GITHUB_WORKSPACE/external/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} -DVCPKG_OVERLAY_PORTS=$GITHUB_WORKSPACE/external/vcpkg-ports
          -DVCPKG_FEATURE_FLAGS=versions -DCMAKE_INSTALL_PREFIX=./install/FarColorer

      - name: Build
        working-directory: build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Install
        working-directory: build
        shell: bash
        run: cmake --install . --config $BUILD_TYPE

      - name: Download scheme
        working-directory: build
        shell: bash
        run: |
          curl -s https://api.github.com/repos/colorer/Colorer-schemes/releases/latest | grep -o "https://.*colorer-base\.allpacked.*.zip" | xargs curl -fsLJO
          zipfilename="$(find . -name "colorer-base*.zip")"
          7z x $zipfilename -o./install/FarColorer/base

      - name: Set the pack file name
        shell: bash
        run: |
          echo "farcolorer_name=FarColorer.${{ matrix.arch }}.${{ steps.get_version.outputs.version }}.7z" >> $GITHUB_ENV
          echo "farcolorer_pdb_name=FarColorer.${{ matrix.arch }}.${{ steps.get_version.outputs.version }}.pdb.7z" >> $GITHUB_ENV
          echo "farcolorer_withoutbase_name=FarColorer.${{ matrix.arch }}.${{ steps.get_version.outputs.version }}.wobase.7z" >> $GITHUB_ENV

      - name: pack plugin
        working-directory: build
        shell: bash
        run: |
          7z a ${{ env.farcolorer_name }} ./install/FarColorer/*
          7z a ${{ env.farcolorer_withoutbase_name }} ./install/FarColorer/* -x!./install/FarColorer/base
          7z a ${{ env.farcolorer_pdb_name }} ./src/colorer.pdb

      - name: Upload result to cache
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: ./build/*.7z
          retention-days: 1

  create-release:
    needs: [build-artifacts]
    runs-on: windows-2019

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Download result
        uses: actions/download-artifact@v2
        with:
          name: result

      - name: Create release
        shell: bash
        run: gh release create ${{ steps.get_version.outputs.version }} -t "FarColorer ${{ steps.get_version.outputs.version }}" -n "New version" ./*.7z
        env:
          GITHUB_TOKEN: ${{secrets.PACKAGES_GITHUB_TOKEN}}