name: Check win32 compiles

on:
  pull_request:
    branches:
      - "master"
      - "candidate-*"
      - "!candidate-7.10.*"
      - "!candidate-7.8.*"
      - "!candidate-7.6.*"
      - "!candidate-7.4.*"
      - "!candidate-7.2.*"
      - "!candidate-7.0.*"
      - "!candidate-6.*"

jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: hpcc-systems/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}
          paths_ignore: '["docs/**", "esp/src/**/*", "dockerfiles/**", "helm/**", "ecllibrary/**", "testing/**", "initfiles/**" ]'

  build:
    name: "Check compiles on Win32"
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: windows-latest
    steps:
      - name: Display build summary
        env:
          OPTION: x64
        working-directory: .
        run: |
          $vcpkg_root = $(get-command vcpkg | Select-Object -ExpandProperty Source | Split-Path)
          echo Option:$Env:OPTION
          echo "Checkout to $Env:GITHUB_WORKSPACE"
          echo "vcpkg @$(get-command vcpkg | Select-Object -ExpandProperty Source | Split-Path)"
          echo "vcpkg @$vcpkg_root"
      - name: Install bison
        working-directory: .
        run: |
          choco install winflexbison3 -y
      - name: Setup msvc environment
        uses: hpcc-systems/msvc-dev-cmd@v1
      - name: Install vcpkg packages
        working-directory: .
        run: |
          vcpkg update
          vcpkg install icu:x64-windows
          vcpkg install zlib:x64-windows
          vcpkg install openssl:x64-windows
          vcpkg install libxslt:x64-windows
      - name: Check out source code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Windows compilation
        working-directory: .
        run: |
          mkdir build
          cd build
          $vcpkg_root = $(get-command vcpkg | Select-Object -ExpandProperty Source | Split-Path)
          cmake $Env:GITHUB_WORKSPACE -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -DUSE_OPENLDAP=0 -DUSE_ICU=1 -DUSE_LIBXSLT=1 -DUSE_CBLAS=0 -DUSE_ZLIB=1 -DUSE_LIBARCHIVE=0 -DUSE_BOOST_REGEX=0 -DUSE_OPENSSL=1 -DUSE_APR=0 -DUSE_AZURE=0 -DUSE_AWS=0 -DWSSQL_SERVICE=0 -DUSE_PYTHON3=0 -DUSE_PYTHON2=0 -DUSE_CASSANDRA=0 -DUSE_TBB=0 -DUSE_JAVA=0 -DUSE_NATIVE_LIBRARIES=1 -DINCLUDE_CONFIG_MANAGER=0 -DINCLUDE_TREEVIEW=0 -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -G "Visual Studio 16 2019" -T host=x64 -A x64
          cmake --build . --config Debug --target ALL_BUILD -- /maxcpucount:3
