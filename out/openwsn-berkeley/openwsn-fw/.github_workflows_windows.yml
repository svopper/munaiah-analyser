# This is a basic workflow to help you get started with Actions

name: SCons build Windows

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { toolchain: gcc, board: python }
          - { toolchain: armgcc, board: openmote-cc2538}
          - { toolchain: armgcc, board: iot-lab_M3}

    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x86

      - name: Test GCC
        run: |
          gcc --version

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: '2.7.x'
          architecture: 'x86'

      - name: Setup ARM toolchain
        uses: fiam/arm-none-eabi-gcc@v1
        with:
          release: '9-2020-q2'

      - name: Test ARM toolchain
        run: |
          arm-none-eabi-gcc --version

      - name: Installing SCons
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip --version
          pip install scons

      # Runs a set of commands using the runners shell
      - name: Build firmware
        run: |
          scons board=${{ matrix.board }} toolchain=${{ matrix.toolchain }} oos_openwsn

