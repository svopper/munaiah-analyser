name: Build and publish to TestPyPI or PyPI
on: [push, pull_request]

jobs:
  build-n-publish:
    name: Build wheels on ${{ matrix.os }} and publish to (Test)PyPI
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, windows-2019, macOS-10.15 ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Build source tarball (only on Linux)
        run: |
          python -m pip install --upgrade pip
          python -m pip install "cython>=0.29" numpy>=1.15 setuptools
          python setup.py sdist --formats=gztar --with-cython --fail-on-error
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      - name: Build wheels
        uses: joerick/cibuildwheel@v1.9.0
        with:
          output-dir: dist
        env:
          CIBW_BEFORE_BUILD: pip install --only-binary numpy "cython>=0.29" numpy>=1.17 setuptools
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.7"
          CIBW_ARCHS: auto64
          CIBW_ARCHS_MACOS: x86_64 universal2
          CIBW_TEST_SKIP: '*_arm64 *_universal2:arm64'
          CIBW_SKIP: pp*
          CIBW_TEST_COMMAND: python {project}/dev/continuous-integration/run_simple_test.py
          CIBW_TEST_REQUIRES: pytest
      - name: Publish distribution ðŸ“¦ to Test PyPI
        if: github.ref == 'refs/heads/master'
        run: |
          pip install twine
          twine upload -r testpypi dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
      - name: Publish distribution release ðŸ“¦ to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags') }}
        run: |
          pip install twine
          twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
