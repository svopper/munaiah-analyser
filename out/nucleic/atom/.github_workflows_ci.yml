name: Continuous Integration
on:
  schedule:
    - cron: '0 0 * * 3'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/ci.yml
      - atom/*
      - tests/*
      - setup.py

jobs:
  types:
    name: Type checking
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install https://github.com/nucleic/cppy/tarball/main
      - name: Install project
        run: |
          python setup.py develop
      - name: Run Mypy
        run: |
          pip install mypy pytest
          mypy atom tests
      - name: Test with pytest
        run: |
          pip install pytest-mypy-plugins regex
          python -X dev -m pytest tests/typing -v
  tests:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10.0-rc.2']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install https://github.com/nucleic/cppy/tarball/main
      - name: Install project
        env:
          CPPFLAGS: --coverage
        run: |
          python setup.py develop
      - name: Test with pytest
        run: |
          pip install pytest-cov
          python -X dev -W error -m pytest tests --ignore=tests/typing --cov atom --cov-report xml -v
      - name: Generate C++ coverage reports
        if: (github.event_name != 'schedule' && matrix.os != 'windows-latest')
        run: |
          bash -c "find . -type f -name '*.gcno' -exec gcov -pb --all-blocks {} +" || true
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        if: (github.event_name != 'schedule' && matrix.os == 'windows-latest')
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        if: (github.event_name != 'schedule' && matrix.os != 'windows-latest')
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
