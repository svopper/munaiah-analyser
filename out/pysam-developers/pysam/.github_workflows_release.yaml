name: Publish pysam wheels to PyPI and TestPyPI

on:
  push:
    branches:
      - v[0-9]+.[0-9]+.x
    tags:
      - v*
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]  # windows-2019,

    steps:
      - name: Checkout pysam
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install prerequisite Python libraries
        run:  |
          python -m pip install --upgrade pip
          pip install cython pytest pytest-pep8

      - name: Build wheels for linux
        if:   runner.os == 'Linux'
        uses: pypa/cibuildwheel@v2.1.2
        env:
          CIBW_BUILD: cp36-* cp37-* cp38-* cp39-*
          CIBW_BEFORE_BUILD: yum install -y libcurl-devel zlib-devel bzip2-devel xz-devel && pip install cython
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1

      - name: Build wheels for macos
        if:   runner.os != 'Linux'
        uses: pypa/cibuildwheel@v2.1.2
        env:
          CIBW_BUILD: cp36-* cp37-* cp38-* cp39-*
          CIBW_BEFORE_BUILD: pip install cython

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:

    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos]
        python-version: [3.9]

    steps:
      - name: Checkout pysam
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install prerequisite Python libraries
        run:  pip install cython pytest pytest-pep8

      - name: Install build prerequisites
        if:   runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -q --no-install-recommends --no-install-suggests libcurl4-openssl-dev

      - name: Create source distribution
        run:  python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:

    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - name: Get Artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish distribution to Test PyPI
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish distribution to PyPI
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

