name: Tests
on:
  push:
  workflow_dispatch:

jobs:
  tests:
    name: "Tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        settings: ['postgresql', 'multi_dbs']
        python: [3.8, 3.9]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Set up PostgreSQL
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '11'
          postgresql: calaccess_raw
          postgresql user: postgres
          postgresql password: postgres

      - id: install-pipenv
        name: Install pipenv
        run: |
          python -m pip install --upgrade --no-cache-dir pip
          python -m pip install --no-cache-dir pipenv
        shell: bash

      - id: cache-pipenv
        name: Cache pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      - id: sync-pipfile
        name: Sync pipfile
        run: pipenv sync --dev --python=${{ matrix.python }}
        shell: bash

      - name: Test
        run: |
          cp example/settings_test_${{ matrix.settings }}.py.template example/settings_local.py
          pipenv run flake8 calaccess_raw
          pipenv run coverage run example/manage.py test calaccess_raw
          pipenv run coverage report -m
        env:
          IA_STORAGE_ACCESS_KEY: ${{ secrets.IA_STORAGE_ACCESS_KEY }}
          IA_STORAGE_SECRET_KEY: ${{ secrets.IA_STORAGE_SECRET_KEY }}
