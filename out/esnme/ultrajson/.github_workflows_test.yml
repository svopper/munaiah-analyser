name: Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.6", "3.7", "3.8", "3.9", "3.10", "pypy3"]
        os: [ubuntu-20.04, ubuntu-18.04, macos-latest, windows-2019]
        exclude:
          - { python-version: "pypy3", os: macos-latest }

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key:
            ${{ matrix.os }}-${{ matrix.python-version }}-v2-${{
            hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-v2-

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U pytest
          python -m pip install .

      - name: Tests
        run: |
          pytest

      - name: Test with coverage
        if: ${{ startsWith(matrix.os, 'ubuntu') && matrix.python-version == '3.9' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          pip install -e .
          pip install coverage
          CFLAGS="--coverage -O0" python setup.py -q build_ext --inplace -f
          coverage run -m pytest
          ./scripts/coverage.sh
          bash <(curl -s https://codecov.io/bash) -X gcov
