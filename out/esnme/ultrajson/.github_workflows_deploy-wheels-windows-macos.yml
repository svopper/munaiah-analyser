name: Deploy Windows/macOS wheels

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - ".github/workflows/deploy-wheels-windows-macos.yml"
  release:
    types:
      - published

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        architecture: [x64, x86]
        exclude:
          - {os: macos-latest, architecture: x86}

    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade -q pip pytest wheel setuptools twine

    - name: Test with pytest
      run: |
        python -m pip install .
        pytest

    - name: Build wheel
      run: python setup.py -q bdist_wheel

    - name: Upload as build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist/*.whl

    - name: Publish package to PyPI
      if: github.event.action == 'published'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypi_password }}
      run: twine upload --skip-existing dist/*.whl

    - name: Publish package to TestPyPI
      if: |
        github.repository == 'ultrajson/ultrajson' &&
        github.ref == 'refs/heads/main'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.test_pypi_password }}
      run: |
        twine upload --repository-url https://test.pypi.org/legacy/ --skip-existing dist/*.whl
