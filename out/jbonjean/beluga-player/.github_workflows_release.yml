name: Release

on:
  push:
    tags:
    - '*'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Trim release name
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f3) # workaround for github.ref invalid value.
      - name: Set project version # just to be sure the version is in sync with the tag.
        run: mvn -B versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Beluga Player ${{ steps.get_version.outputs.VERSION }}
          draft: true
          prerelease: false
      - name: Upload jar
        id: upload-jar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/beluga-player-${{ steps.get_version.outputs.VERSION }}.jar
          asset_name: beluga-player-${{ steps.get_version.outputs.VERSION }}.jar
          asset_content_type: application/octet-stream
      - name: Upload deb
        id: upload-deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/beluga-player_${{ steps.get_version.outputs.VERSION }}_all.deb
          asset_name: beluga-player_${{ steps.get_version.outputs.VERSION }}_all.deb
          asset_content_type: application/octet-stream

