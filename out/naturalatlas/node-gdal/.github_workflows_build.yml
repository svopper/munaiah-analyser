name: Build
on:
  push:
    branches:
      - "master"
    tags:
      - "v*.*.**"
  pull_request:
  workflow_dispatch:
jobs:
  build-node:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11, windows-2019]
        node: [12.x, 14.x, 16.x, 17.x]
        architecture: [x64]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.architecture_node }}
      - run: node --version
      - run: npm --version
      - run: npm install node-gyp@8.3.0 --global
      - run: npm config set msbuild_path "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe"
        if: ${{ runner.os == 'Windows' }}
      - run: export CXX=g++-6 CXXFLAGS=-std=c++14 CC=gcc-6
        if: ${{ runner.os == 'Linux' }}
      - run: npm install --build-from-source
        env:
          npm_config_arch: ${{ matrix.architecture }}
          npm_config_target_arch: ${{ matrix.architecture }}
      - run: ./node_modules/.bin/node-pre-gyp package testpackage
      - run: npm test
      - uses: actions/upload-artifact@v2
        with:
          path: build/stage/naturalatlas/node-gdal/releases/download/**/*.gz
          name: bindings
          if-no-files-found: error
  release:
    needs: [build-node]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/download-artifact@v2
        with:
          name: bindings
          path: builds/bindings
        id: upload-release-asset
      - run: ls -lah builds/bindings/
      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: 'tags\/(.*)$'
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semver_parser.outputs.fullversion }}
          release_name: ${{ steps.semver_parser.outputs.fullversion }}
          draft: false
          prerelease: steps.semver_parser.outputs.prerelease != []
      - uses: AButler/upload-release-assets@v2.0
        with:
          files: 'builds/bindings/**/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.semver_parser.outputs.fullversion }}
