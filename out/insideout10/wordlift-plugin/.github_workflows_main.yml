name: CI

on:
  push:
    branches:
      - master
      - develop
      - 'release/**'
  pull_request:
    branches:
      - master
      - develop

jobs:
  cancel_running_workflows:
    runs-on: ubuntu-latest
    steps:
      - name: cancel running workflows
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.TOKEN }}
  php5-3_compat:
    runs-on: ubuntu-latest
    container:
      # Do not upgrade to 2.0.9+ unless you want to use PHP 8,
      image: composer:2.0.8
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        run: |
          composer install
          ./vendor/bin/phpcs src/ --extensions=php --ignore=class-wordlift-entity-types-taxonomy-walker-5-3.php,autoload_static.php \
              --standard=PHPCompatibilityWP --runtime-set testVersion 5.3

  # These tests need updating.
  #  js_karma:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: deploy key
  #        uses: shimataro/ssh-key-action@v2
  #        with:
  #          name: id_rsa-gitlab
  #          key: ${{ secrets.GITLAB_DEPLOY_KEY }}
  #          known_hosts: "gitlab.com,52.167.219.168 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY="
  #          config: |
  #            Host gitlab.com
  #              User git
  #              IdentityFile ~/.ssh/id_rsa-gitlab
  #      - name: checkout
  #        uses: actions/checkout@v2
  #      - name: install node
  #        uses: actions/setup-node@v1
  #        with:
  #          node-version: "10"
  #      - name: install packages
  #        run: npm install
  #      # We need to run using `docker run` instead of `container` because the latter sets the `HOME` env to a user folder
  #      # and Firefox will refuse to run.
  #      #
  #      # https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners#file-systems
  #      - name: test
  #        run: >
  #          docker run --workdir /github/workspace --rm -v "/var/run/docker.sock":"/var/run/docker.sock" \
  #            -v $GITHUB_WORKSPACE:"/github/workspace" \
  #              ziodave/node-chromium:node10-2 run test:js

#  js_jest:
#    runs-on: ubuntu-latest
#    steps:
#      - name: checkout
#        uses: actions/checkout@v2
#      - name: install node
#        uses: actions/setup-node@v1
#        with:
#          node-version: "10"
#      - name: test
#        run: npm run test:jest
  wordpress:
    name: ${{ matrix.image }}_${{ matrix.phpunit-xml }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - "php5.4-phpunit4.8-wordpress4.4"
          - "php5.5-phpunit4.8-wordpress4.4"
          - "php5.6-phpunit4.8-wordpress4.7"
          - "php7.0-phpunit4.8-wordpress5.2"
          - "php7.1-phpunit4.8-wordpress5.3"
          - "php7.2-phpunit4.8-wordpress5.4"
          - "php7.3-phpunit7.5-wordpress5.5"
          - "php7.3-phpunit7.5-wordpress5.6"
          - "php8.0-phpunit7.5woo-wordpress5.6"
        phpunit-xml:
          - phpunit.xml
          - phpunit-multisite.xml
        dataset-ng:
          - true
          - false
#        include:
#          - acf-pro-enabled: true
#            image: "php5.6-phpunit4.8-wordpress4.7"
#            phpunit-xml: phpunit.xml
#            dataset-ng: true
#          - acf-pro-enabled: true
#            image: "php5.6-phpunit4.8-wordpress4.7"
#            phpunit-xml: phpunit-multisite.xml
#            dataset-ng: true
#          - acf-pro-enabled: true
#            image: "php5.6-phpunit4.8-wordpress4.7"
#            phpunit-xml: phpunit.xml
#            dataset-ng: false
#          - acf-pro-enabled: true
#            image: "php5.6-phpunit4.8-wordpress4.7"
#            phpunit-xml: phpunit-multisite.xml
#            dataset-ng: false
#          - acf-pro-enabled: true
#            image: "php7.3-phpunit7.5-wordpress5.5"
#            phpunit-xml: phpunit.xml
#            dataset-ng: true
#          - acf-pro-enabled: true
#            image: "php7.3-phpunit7.5-wordpress5.5"
#            phpunit-xml: phpunit-multisite.xml
#            dataset-ng: true
#          - acf-pro-enabled: true
#            image: "php7.3-phpunit7.5-wordpress5.5"
#            phpunit-xml: phpunit.xml
#            dataset-ng: false
#          - acf-pro-enabled: true
#            image: "php7.3-phpunit7.5-wordpress5.5"
#            phpunit-xml: phpunit-multisite.xml
#            dataset-ng: false
    # If you want the following envs to be avail to docker, you need to add them to `docker run`.
    env:
      ACF_PRO_KEY: ${{ secrets.ACF_PRO_KEY }}
      ACF_PRO_ENABLED: ${{ matrix.acf-pro-enabled }}
      WORDLIFT_API_URL: ${{  secrets.WORDLIFT_API_URL }}
      YOUTUBE_DATA_API_KEY: ${{  secrets.YOUTUBE_DATA_API_KEY }}
      VIMEO_API_KEY: ${{  secrets.VIMEO_API_KEY }}
      WORDLIFT_KEY: ${{ secrets.WORDLIFT_KEY }}
      WL_DATASET_NG: ${{ matrix.dataset-ng }}

    services:
      db:
        # WP set up uses SET storage_engine=InnoDB; which is removed after MySQL 5.6
        image: mysql:5.6
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: wordpress
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: wordpress
        ports:
          - 3306:3306
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: phpunit
        run: >
          docker run --workdir /github/workspace --rm -v "/var/run/docker.sock":"/var/run/docker.sock" \
            -e ACF_PRO_ENABLED -e YOUTUBE_DATA_API_KEY -e VIMEO_API_KEY -e ACF_PRO_KEY -e WORDLIFT_API_URL -e WORDLIFT_KEY -e WL_DATASET_NG \
            -v $GITHUB_WORKSPACE:"/github/workspace" \
            --network $(docker network ls --format="{{ .Name }}" --filter "Name=^github_network_") \
              ziodave/wordpress-tests:${{ matrix.image }} -c ${{ matrix.phpunit-xml }} --stop-on-error --stop-on-fail

