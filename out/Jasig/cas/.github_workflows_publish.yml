name: Publish

env:
  JAVA_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GRADLE_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  TERM: xterm-256color
  REPOSITORY_USER: ${{ secrets.REPOSITORY_USER }}
  REPOSITORY_PWD: ${{ secrets.REPOSITORY_PWD }}
  GH_PAGES_TOKEN: ${{ secrets.GH_PAGES_TOKEN }}
  GRADLE_BUILDCACHE_USER: ${{ secrets.GRADLE_BUILDCACHE_USER }}
  GRADLE_BUILDCACHE_PSW: ${{ secrets.GRADLE_BUILDCACHE_PSW }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  RUBY_VERSION: 3.0.2
  JDK_CURRENT: 11.0.13
  DOCS_BRANCH: master

##########################################################################

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ labeled ]
    branches: [ master ]

##########################################################################

jobs:
  cancel-previous-runs:
    if: ${{ (github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'CI')) && !contains(github.event.head_commit.message, 'trigger dependency update') && !contains(github.event.head_commit.message, 'documentation update') }}
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  ##########################################################################

  initialize:
    needs: [cancel-previous-runs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: ls ./ci && chmod -R 777 ./ci/*.sh && ./ci/init-build.sh

  ##########################################################################

  cache:
    runs-on: ubuntu-latest
    needs: [initialize]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/checkout@v2
      - name: Download Dependencies
        run: ./gradlew --build-cache --configure-on-demand --no-daemon downloadDependencies --parallel --refresh-dependencies
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  ##########################################################################

  publish-snapshots:
     runs-on: ubuntu-latest
     needs: [cache]
     continue-on-error: false
     if: ${{ github.event_name == 'push' }}
     steps:
       - uses: actions/checkout@v2
       - name: Set up JDK
         uses: actions/setup-java@v2
         with:
           java-version: ${{ env.JDK_CURRENT }}
           distribution: 'zulu'
       - name: Initialize
         run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
       - uses: actions/cache@v2
         with:
           path: ~/.gradle/caches
           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
           restore-keys: |
             ${{ runner.os }}-gradle-
       - name: Publish SNAPSHOTs
         if: ${{ env.REPOSITORY_USER != null && env.REPOSITORY_PWD != null }}
         run: ./gradlew -DpublishSnapshots=true --build-cache --configure-on-demand --no-daemon --parallel -Dorg.gradle.internal.http.socketTimeout=180000 -Dorg.gradle.internal.http.connectionTimeout=180000 build publish -x test -x javadoc -x check -DrepositoryUsername="${REPOSITORY_USER}" -DrepositoryPassword="${REPOSITORY_PWD}"


  ##########################################################################

  publish-docs:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs: [cache]
    continue-on-error: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install Ruby gems
        run: gem install bundler
#      - name: Setup tmate session
#        uses: mxschmitt/action-tmate@v3
      - name: Publish Documentation
        run: ./ci/docs/publish.sh --branch ${{ env.DOCS_BRANCH }}
