name: Validation

env:
  JAVA_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GRADLE_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GRADLE_BUILDCACHE_USER: ${{ secrets.GRADLE_BUILDCACHE_USER }}
  GRADLE_BUILDCACHE_PSW: ${{ secrets.GRADLE_BUILDCACHE_PSW }}
  TERM: xterm-256color
  JDK_CURRENT: 11.0.13

##########################################################################

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ labeled ]
    branches: [ master ]

##########################################################################

jobs:
  cancel-previous-runs:
    if: ${{ (github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'CI')) && !contains(github.event.head_commit.message, 'trigger dependency update') && !contains(github.event.head_commit.message, 'documentation update') }}
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

##########################################################################

  initialize:
    runs-on: ubuntu-latest
    needs: [cancel-previous-runs]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: ls ./ci && chmod -R 777 ./ci/*.sh && ./ci/init-build.sh

##########################################################################

  cache:
    runs-on: ubuntu-latest
    needs: [initialize]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/checkout@v2
      - name: Download Dependencies
        run: ./gradlew --build-cache --configure-on-demand --no-daemon downloadDependencies --parallel --refresh-dependencies
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

##########################################################################

  validate-javadocs:
    runs-on: ubuntu-latest
    needs: [cache]
    continue-on-error: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Javadocs
        run: ./gradlew --build-cache --configure-on-demand --no-daemon --parallel javadoc -x test -x check -DskipNestedConfigMetadataGen=true --parallel

##########################################################################

  validate-commandline-shell:
    runs-on: ubuntu-latest
    needs: [cache]
    continue-on-error: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate CAS Command-line Shell
        run: |
          chmod -R 777 ./ci/tests/shell/run-shell.sh && ./ci/tests/shell/run-shell.sh
          echo "Checking for stack traces in output that would indicate an error"
          cat cas-shell.out
          count=$(grep -c -e ".*\(Exception\|Throwable\|caused\\sby\).*" cas-shell.out || true);
          test $count -eq 0

##########################################################################

  validate-webapp-embedded:
    runs-on: ubuntu-latest
    needs: [cache]
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        category:
          - tomcat
          - jetty
          - undertow
    name: embedded - ${{ matrix.category }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Web Application Server
        run: ./ci/tests/webapp/validate-embedded-webapp.sh ${{ matrix.category }}

##########################################################################

  validate-webapp-external:
    runs-on: ubuntu-latest
    needs: [cache]
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        category:
          - cas-server
          - config-server
          - discovery-server
          - bootadmin-server
    name: external tomcat - ${{ matrix.category }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Web Application Server via External Apache Tomcat
        run: ./ci/tests/webapp/validate-external-webapp.sh ${{ matrix.category }}

##########################################################################

  validate-spring-cloud-config-server:
    runs-on: ubuntu-latest
    needs: [cache]
    continue-on-error: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Spring Cloud Configuration Server
        run: ./ci/tests/webapp/validate-configserver-webapp.sh

##########################################################################

  validate-eureka-discovery-server:
    runs-on: ubuntu-latest
    needs: [cache]
    continue-on-error: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Eureka Discovery Server
        run: ./ci/tests/webapp/validate-eurekaserver-webapp.sh

##########################################################################

  validate-spring-boot-admin-server:
    runs-on: ubuntu-latest
    needs: [cache]
    continue-on-error: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'zulu'
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh && ./ci/init-build.sh
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Validate Spring Boot Admin Server
        run: ./ci/tests/webapp/validate-bootadmin-webapp.sh
