name: Windows
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '15 12 * * 0'

jobs:
  build:
    name: ${{ matrix.configuration }}-${{ matrix.platform }}-build
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x64, ARM64]
        configuration: [Release]
      fail-fast: false
    env:
      VCPKG_BINARY_SOURCES: 'clear;files,${{ github.workspace }}\3rdParty\buildCache\windows\vcpkgcache\,readwrite'
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Download OpenCppCoverage
        uses: suisei-cn/actions-download-file@v1
        if: success() && matrix.platform == 'x64'
        id: DownloadOpenCppCoverage
        with:
          url: "https://opencppcoverage.gallerycdn.vsassets.io/extensions/opencppcoverage/opencppcoverageplugin/0.9.7.1/1581265346391/OpenCppCoverage-0.9.7.1.vsix"
          target: ${{ github.workspace }}\temp\

      - name: Unzip OpenCppCoverage
        if: success() && matrix.platform == 'x64'
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: ${{ github.workspace }}\temp\OpenCppCoverage-0.9.7.1.vsix
          pathTarget: ${{ github.workspace }}\temp\OpenCppCoverage

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1

      - name: Fix vcpkg
        run: vcpkg.exe integrate remove

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}\3rdParty\Windows\cuda\
          key: windows-${{ matrix.platform }}-${{ matrix.configuration }}-${{ hashFiles('win_build/vcpkg_3rdparty_dependencies_vs2019.vcxproj') }}
          restore-keys: windows-${{ matrix.platform }}-${{ matrix.configuration }}-

      - name: Configure Python
        if: ${{ success() }}
        shell: cmd
        run: |
          pip install boto3

      - name: Download vcpkg binary cache
        if: ${{ success() }}
        shell: cmd
        run: |
          python deploy\manage_vcpkg_archive_cache.py download ${{ github.workspace }}\3rdParty\buildCache\windows\vcpkgcache\ windows_${{ matrix.platform }} "edu.berkeley.boinc.github.actions.build.vcpkg.binary.cache"

      - name: Build
        run: msbuild win_build\boinc_vs2019.sln -p:Configuration=${{ matrix.configuration }} -p:Platform=${{ matrix.platform }} -p:VcpkgTripletConfig=ci -p:BuildConfig=ci -m

      - name: Run tests
        if: success() && matrix.platform == 'x64'
        working-directory: win_build\Build\${{ matrix.platform }}\${{ matrix.configuration }}
        run: ${{ github.workspace }}\temp\OpenCppCoverage\OpenCppCoverage-x64\OpenCppCoverage.exe --cover_children --optimized_build --sources ${{ github.workspace }} --export_type=cobertura:cobertura.xml -- unittests.exe --gtest_output=xml:gtest.xml

      - name: Prepare logs on failure
        if: ${{ failure() }}
        run: |
          7z.exe a -t7z -mx=9 deploy/logs.7z -r0 3rdParty/Windows/vcpkg/buildtrees/*.log

      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: windows_logs_${{ matrix.type }}_${{ github.event.pull_request.head.sha }}
          path: deploy/logs.7z

      - name: Prepare artifacts for deploy
        if: ${{ success() }}
        shell: cmd
        run: |
          python deploy\prepare_deployment.py win_apps
          python deploy\prepare_deployment.py win_client
          python deploy\prepare_deployment.py win_manager
      - name: Upload apps
        uses: actions/upload-artifact@v2
        with:
          name: win_apps_${{ matrix.platform }}_${{ github.event.pull_request.head.sha }}
          path: deploy/win_apps.7z
      - name: Upload client
        uses: actions/upload-artifact@v2
        with:
          name: win_client_${{ matrix.platform }}_${{ github.event.pull_request.head.sha }}
          path: deploy/win_client.7z
      - name: Upload manager
        uses: actions/upload-artifact@v2
        with:
          name: win_manager_${{ matrix.platform }}_${{ github.event.pull_request.head.sha }}
          path: deploy/win_manager.7z

      - name: Upload Google Tests Results
        if: always() && matrix.platform == 'x64'
        uses: actions/upload-artifact@v2
        with:
          name: Windows_tests_results
          path: "win_build/Build/${{ matrix.platform }}/${{ matrix.configuration }}/**/gtest.xml"

      - name: Upload coverage report
        if: success() && matrix.platform == 'x64'
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          verbose: false

      - name: Upload vcpkg binary cache
        if: ${{ success() }}
        shell: cmd
        env:
          ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
        run: |
          python deploy\manage_vcpkg_archive_cache.py upload ${{ github.workspace }}\3rdParty\buildCache\windows\vcpkgcache\ windows_${{ matrix.platform }} "edu.berkeley.boinc.github.actions.build.vcpkg.binary.cache" "%ACCESS_KEY%" "%SECRET_KEY%"
