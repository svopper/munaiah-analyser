name: Build CI

on:
  push:
  pull_request:
  release:
    types: [published]
  check_suite:
    types: [rerequested]

jobs:
  rip-and-test:
    runs-on: ubuntu-20.04
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - run: git fetch --recurse-submodules=no https://github.com/linuxcnc/linuxcnc refs/tags/*:refs/tags/*
    - name: Build RIP & test
      run: |
        ./scripts/travis-install-build-deps.sh
        cd src
        ./autogen.sh
        ./configure --with-realtime=uspace --disable-check-runtime-deps
        make -O -j$((1+$(nproc))) default pycheck V=1
        # Note that the package build covers html docs
        ../scripts/rip-environment runtests -p
    
  htmldocs:
    runs-on: ubuntu-20.04
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - run: git fetch --recurse-submodules=no https://github.com/linuxcnc/linuxcnc refs/tags/*:refs/tags/*
    - name: Build HTML docmentation
      run: |
        ./scripts/travis-install-build-deps.sh
        cd src
        ./autogen.sh
        ./configure --with-realtime=uspace --disable-check-runtime-deps --enable-build-documentation=html
        make -O -j$((1+$(nproc))) docs
        # Note that the package build covers html docs

  package:
    runs-on: ubuntu-20.04
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0
    - name: Build Debian package
      run: |
        set -x
        git fetch --recurse-submodules=no https://github.com/linuxcnc/linuxcnc refs/tags/*:refs/tags/*
        ./scripts/travis-install-build-deps.sh
        codename=$(grep VERSION_CODENAME /etc/os-release | cut -d = -f 2)
        dch --maintmaint --distribution $codename "GitHub test package."
        fakeroot ./debian/rules binary
        sudo apt-get install ../*.deb
        ./scripts/runtests -p tests/
        lintian --info --display-info --pedantic --display-experimental ../*.deb
