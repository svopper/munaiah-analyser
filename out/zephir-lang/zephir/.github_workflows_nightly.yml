name: Zephir Nightly

on:
  schedule:
    - cron: '0 3 * * *' # Daily at 03:00 runs only on default branch
  workflow_dispatch:

env:
  RE2C_VERSION: 2.2
  ZEPHIR_PARSER_VERSION: 1.4.1
  CACHE_DIR: .cache

jobs:
  nightly:
    name: "PHP-${{ matrix.php }}-${{ matrix.build_type }}-${{ matrix.name }}-${{ matrix.arch }}"
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        php: [ '8.1', '8.2' ]
        build_type: [ 'ts', 'nts' ]
        arch: [ 'x64' ]

        # matrix names should be in next format:
        #     {php}-{ts}-{os.name}-{compiler}-{arch}
        include:
          # Linux
          - name: ubuntu-gcc
            os: ubuntu-20.04
            compiler: gcc

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 5

      - name: Install PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '${{ matrix.php }}'
          extensions: mbstring, fileinfo, gmp, sqlite, pdo_sqlite, psr, zip, mysqli, zephir_parser-${{ env.ZEPHIR_PARSER_VERSION }}
          tools: phpize, php-config
          coverage: xdebug
          # variables_order: https://github.com/zephir-lang/zephir/pull/1537
          # enable_dl:       https://github.com/zephir-lang/zephir/pull/1654
          # allow_url_fopen: https://github.com/zephir-lang/zephir/issues/1713
          # error_reporting: https://github.com/zendframework/zend-code/issues/160
          ini-values: >-
            variables_order=EGPCS,
            enable_dl=On,
            allow_url_fopen=On,
            error_reporting=-1,
            memory_limit=1G,
            date.timezone=UTC,
            xdebug.max_nesting_level=256
        env:
          PHPTS: ${{ matrix.build_type }}
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Set Up Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Project Dependencies
        run: |
          echo "::group::Install composer dependencies"
          composer install --prefer-dist --no-interaction --no-ansi --no-progress
          echo "::endgroup::"

      - name: Fast Commands Test
        run: php zephir --help

      - name: Build Test Extension (Linux)
        uses: ./.github/workflows/build-linux-ext
        with:
          compiler: ${{ matrix.compiler }}
          cflags: '-O2 -Wall -fvisibility=hidden -flto -DZEPHIR_RELEASE=1'
          ldflags: '--coverage'

      - name: Stub Extension Info
        run: |
          php -d extension=./ext/modules/stub.so --ri stub

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Unit Tests (Stub Extension)
        run: |
          php -d extension=./ext/modules/stub.so vendor/bin/phpunit -c phpunit.ext.xml

      - name: Unit Tests (Zephir)
        run: vendor/bin/phpunit --testsuite Zephir
        env:
          XDEBUG_MODE: coverage

      - name: Black-box Testing
        working-directory: tests/sharness
        run: |
          make -j$(getconf _NPROCESSORS_ONLN)

      - name: Upload build artifacts after Failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: debug-${{ matrix.name }}-${{ matrix.php }}-${{ matrix.build_type }}-${{ matrix.name }}-${{ matrix.compiler }}-${{ matrix.arch }}
          path: |
            ${{ github.workspace }}/*.log
            ${{ github.workspace }}/ext/
            !${{ github.workspace }}/ext/kernel/
            !${{ github.workspace }}/ext/stub/
            !${{ github.workspace }}/ext/Release/
            !${{ github.workspace }}/ext/x64/Release/
          retention-days: 30
