name: Python Dev

on:
  push:
    branches:
      - master
      - 1.3.x
  pull_request:
    branches:
      - master
      - 1.3.x
    paths-ignore:
      - "doc/**"

env:
  PYTEST_WORKERS: "auto"
  PANDAS_CI: 1
  PATTERN: "not slow and not network and not clipboard"
  COVERAGE: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
        pytest_target: ["pandas/tests/[a-h]*", "pandas/tests/[i-z]*"]
        include:
          # No need to split tests on windows
          - os: windows-latest
            pytest_target: pandas

    name: actions-310-dev
    timeout-minutes: 80

    concurrency:
      group: ${{ github.ref }}-${{ matrix.os }}-${{ matrix.pytest_target }}-dev
      cancel-in-progress: ${{github.event_name == 'pull_request'}}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python Dev Version
      uses: actions/setup-python@v2
      with:
        python-version: '3.10-dev'

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -i https://pypi.anaconda.org/scipy-wheels-nightly/simple numpy
        pip install git+https://github.com/nedbat/coveragepy.git
        pip install cython python-dateutil pytz hypothesis pytest>=6.2.5 pytest-xdist pytest-cov
        pip list

    - name: Build Pandas
      run: |
        python setup.py build_ext -q -j2
        python -m pip install -e . --no-build-isolation --no-use-pep517

    - name: Build Version
      run: |
        python -c "import pandas; pandas.show_versions();"

    - name: Test with pytest
      env:
          PYTEST_TARGET: ${{ matrix.pytest_target }}
      shell: bash
      run: |
        ci/run_tests.sh

    - name: Publish test results
      uses: actions/upload-artifact@master
      with:
        name: Test results
        path: test-data.xml
      if: failure()

    - name: Print skipped tests
      run: |
        python ci/print_skipped.py

    - name: Report Coverage
      run: |
        coverage report -m

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        flags: unittests
        name: codecov-pandas
        fail_ci_if_error: true
