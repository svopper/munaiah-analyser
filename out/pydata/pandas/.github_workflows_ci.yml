name: CI

on:
  push:
    branches:
      - master
      - 1.3.x
  pull_request:
    branches:
      - master
      - 1.3.x

env:
  ENV_FILE: environment.yml
  PANDAS_CI: 1

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    concurrency:
      group: ${{ github.ref }}-checks
      cancel-in-progress: ${{github.event_name == 'pull_request'}}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Cache conda
      uses: actions/cache@v2
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ hashFiles('${{ env.ENV_FILE }}') }}

    - uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: pandas-dev
        channel-priority: strict
        environment-file: ${{ env.ENV_FILE }}
        use-only-tar-bz2: true

    - name: Install node.js (for pyright)
      uses: actions/setup-node@v2
      with:
        node-version: "16"

    - name: Install pyright
      # note: keep version in sync with .pre-commit-config.yaml
      run: npm install -g pyright@1.1.171

    - name: Build Pandas
      uses: ./.github/actions/build_pandas

    - name: Checks on imported code
      run: ci/code_checks.sh code
      if: always()

    - name: Running doctests
      run: ci/code_checks.sh doctests
      if: always()

    - name: Docstring validation
      run: ci/code_checks.sh docstrings
      if: always()

    - name: Typing validation
      run: ci/code_checks.sh typing
      if: always()

    - name: Testing docstring validation script
      run: pytest scripts
      if: always()

    - name: Running benchmarks
      run: |
        cd asv_bench
        asv check -E existing
        git remote add upstream https://github.com/pandas-dev/pandas.git
        git fetch upstream
        asv machine --yes
        asv dev | sed "/failed$/ s/^/##[error]/" | tee benchmarks.log
        if grep "failed" benchmarks.log > /dev/null ; then
            exit 1
        fi
      if: always()

    - name: Publish benchmarks artifact
      uses: actions/upload-artifact@master
      with:
        name: Benchmarks log
        path: asv_bench/benchmarks.log
      if: failure()

  web_and_docs:
    name: Web and docs
    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.ref }}-web-docs
      cancel-in-progress: true

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up pandas
      uses: ./.github/actions/setup

    - name: Build website
      run: |
        source activate pandas-dev
        python web/pandas_web.py web/pandas --target-path=web/build
    - name: Build documentation
      run: |
        source activate pandas-dev
        doc/make.py --warnings-are-errors | tee sphinx.log ; exit ${PIPESTATUS[0]}

    # This can be removed when the ipython directive fails when there are errors,
    # including the `tee sphinx.log` in te previous step (https://github.com/ipython/ipython/issues/11547)
    - name: Check ipython directive errors
      run: "! grep -B10 \"^<<<-------------------------------------------------------------------------$\" sphinx.log"

    - name: Install ssh key
      run: |
        mkdir -m 700 -p ~/.ssh
        echo "${{ secrets.server_ssh_key }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "${{ secrets.server_ip }} ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBE1Kkopomm7FHG5enATf7SgnpICZ4W2bw+Ho+afqin+w7sMcrsa0je7sbztFAV8YchDkiBKnWTG4cRT+KZgZCaY=" > ~/.ssh/known_hosts
      if: ${{github.event_name == 'push' && github.ref == 'refs/heads/master'}}

    - name: Copy cheatsheets into site directory
      run: cp doc/cheatsheet/Pandas_Cheat_Sheet* web/build/

    - name: Upload web
      run: rsync -az --delete --exclude='pandas-docs' --exclude='docs' web/build/ docs@${{ secrets.server_ip }}:/usr/share/nginx/pandas
      if: ${{github.event_name == 'push' && github.ref == 'refs/heads/master'}}

    - name: Upload dev docs
      run: rsync -az --delete doc/build/html/ docs@${{ secrets.server_ip }}:/usr/share/nginx/pandas/pandas-docs/dev
      if: ${{github.event_name == 'push' && github.ref == 'refs/heads/master'}}

    - name: Move docs into site directory
      run: mv doc/build/html web/build/docs

    - name: Save website as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: website
        path: web/build
        retention-days: 14

  data_manager:
    name: Test experimental data manager
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pattern: ["not slow and not network and not clipboard", "slow"]
    concurrency:
      group: ${{ github.ref }}-data_manager-${{ matrix.pattern }}
      cancel-in-progress: true

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up pandas
      uses: ./.github/actions/setup

    - name: Run tests
      env:
        PANDAS_DATA_MANAGER: array
        PATTERN: ${{ matrix.pattern }}
        PYTEST_WORKERS: "auto"
        PYTEST_TARGET: pandas
      run: |
        source activate pandas-dev
        ci/run_tests.sh

    - name: Print skipped tests
      run: python ci/print_skipped.py
