# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-HSQLDB:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven -v
      run: mvn -v
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn -Ddatasource.dialect=HSQLDB -B package --file pom.xml
  build-PGSQL-9_4:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:9.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: lavagna
        ports:
            - 5432:5432
            # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven -v
      run: mvn -v
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn -Ddatasource.dialect=PGSQL -B package --file pom.xml
  build-MYSQL-5_5:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.5
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
            - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven -v
      run: mvn -v
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Create db
      run: mysql --host=127.0.0.1 -u root -e 'CREATE DATABASE lavagna CHARACTER SET utf8 COLLATE utf8_bin;'
    - name: Build with Maven
      run: mvn -Ddatasource.dialect=MYSQL -B package --file pom.xml
  build-MYSQL-5_6:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.6
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
            - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven -v
      run: mvn -v
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Create db
      run: mysql --host=127.0.0.1 -u root -e 'CREATE DATABASE lavagna CHARACTER SET utf8 COLLATE utf8_bin;'
    - name: Build with Maven
      run: mvn -Ddatasource.dialect=MYSQL -B package --file pom.xml
  build-MARIADB_10_1:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:10.1
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
            - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Maven -v
      run: mvn -v
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Create db
      run: mysql --host=127.0.0.1 -u root -e 'CREATE DATABASE lavagna CHARACTER SET utf8 COLLATE utf8_bin;'
    - name: Build with Maven
      run: mvn -Ddatasource.dialect=MYSQL -B package --file pom.xml