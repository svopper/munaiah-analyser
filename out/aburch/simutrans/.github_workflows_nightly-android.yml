name: Nightly build Android

on:
  push:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get -yqq update
        sudo apt-get -ym install curl expect git libc6:i386 libgcc1:i386 libncurses5:i386 libstdc++6:i386 zlib1g:i386 openjdk-8-jdk wget unzip vim make subversion zip

    - name: Setup Android SDK environment variables
      run: |
        echo "ANDROID_HOME=/opt/android-sdk-linux" >> $GITHUB_ENV
        echo "ANDROID_SDK_HOME=/opt/android-sdk-linux" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=/opt/android-sdk-linux" >> $GITHUB_ENV
        echo "ANDROID_SDK=/opt/android-sdk-linux" >> $GITHUB_ENV

    - name: Create working directory for next steps
      run: |
        sudo mkdir /opt/android-sdk-linux
        sudo mkdir /android-sdl
        sudo chown -R runner /opt/android-sdk-linux
        sudo chgrp -R docker /opt/android-sdk-linux
        sudo chown -R runner /android-sdl
        sudo chgrp -R docker /android-sdl

    - name: Install Android SDK tools
      working-directory: /opt/android-sdk-linux
      run: |
        wget https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
        unzip commandlinetools-linux-7583922_latest.zip
        rm commandlinetools-linux-7583922_latest.zip
        mv cmdline-tools latest
        mkdir cmdline-tools 
        mv latest cmdline-tools/latest
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH

    # licenses required for Android SDK must be found somewhere; them being rather simple they are hardcoded here, but they could also be stored as files
    - name: Setup licenses files for Android SDK
      working-directory: /opt/android-sdk-linux
      run: |
        mkdir licenses
        echo "\n8933bad161af4178b1185d1a37fbf41ea5269c55\n24333f8a63b6825ea9c5514f83c2829b004d1fee" >> licenses/android-sdk-license
        echo "\n84831b9409646a918e30573bab4c9c91346d8abd" >> licenses/android-sdk-preview-license

    - name: Install Android SDK dependencies
      working-directory: /opt/android-sdk-linux
      run: |
        yes | sdkmanager --install "platform-tools"
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
        yes | sdkmanager --install "build-tools;30.0.3"
        echo "$ANDROID_HOME/build-tools/30.0.3" >> $GITHUB_PATH
        yes | sdkmanager --install "cmake;3.18.1"
        echo "$ANDROID_HOME/cmake/3.18.1/bin" >> $GITHUB_PATH
        yes | sdkmanager --install "ndk;23.0.7599858"
        echo "$ANDROID_HOME/ndk/23.0.7599858" >> $GITHUB_PATH
        echo "$ANDROID_HOME/ndk/23.0.7599858/toolchains/llvm/prebuilt/linux-x86_64/bin/" >> $GITHUB_PATH
        ln -s llvm-objdump ${ANDROID_HOME}/ndk/23.0.7599858/toolchains/llvm/prebuilt/linux-x86_64/bin/objdump

    - name: Install keystore for Android APK signing
      run: |
        mkdir /home/runner/.android/
        keytool -genkey -v -keystore /home/runner/.android/debug.keystore -alias androiddebugkey -keyalg RSA -keysize 2048 -validity 10000 -keypass android -storepass android -dname "cn=example.com,ou=exampleou,dc=example,dc=com"

    - name: Checkout lib Android SDL by pelya (hard coded version)
      working-directory: /android-sdl
      run: |
        git init && git remote add origin https://github.com/krosk/commandergenius.git && git fetch origin e84e645ca309e56db84a211b484be7df6f3b03ca && git reset --hard FETCH_HEAD

    - name: Setup licenses for Gradle
      working-directory: /android-sdl
      run: |
        ln -s $ANDROID_HOME/licenses project/licenses

    # pelya building script expects that 1/ simutrans is found inside /android-sdl/project/jni/application/simutrans/simutrans and 2/ that it is a svn repo, as revision.h is populated by svn command line
    # the content of actions/checkout is a git repo so it is not compatible
    - name: Setup Android SDL working folder to host Simutrans (latest)
      working-directory: /android-sdl
      run: |
        svn checkout svn://servers.simutrans.org/simutrans/trunk project/jni/application/simutrans/simutrans

    # End of environment setup (dependencies installed, source code at correct location)

    # some temporary changes to Android SDL are stored in <repo>/.github/android
    - name: (Temporary) Patch Android SDL and replace version
      working-directory: /android-sdl
      run: |
        if [ -f $GITHUB_WORKSPACE/.github/android/*.patch ]; then cp -r $GITHUB_WORKSPACE/.github/android/*.patch .; fi;
        if [ -f *.patch ]; then git apply *.patch; fi;
        sed -i "s/^AppVersionCode=[0-9]\+/AppVersionCode=$(svnversion project/jni/application/simutrans/simutrans)/" ./project/jni/application/simutrans/AndroidAppSettings.cfg
        sed -i "s/^AppVersionName=\"[0-9]\+.[0-9]\+\"/AppVersionName=\"r$(svnversion project/jni/application/simutrans/simutrans)\"/" ./project/jni/application/simutrans/AndroidAppSettings.cfg

    - name: Build Simutrans
      working-directory: /android-sdl
      run: |
        ./build.sh simutrans
        mv /android-sdl/project/app/build/outputs/apk/release/app-release.apk $GITHUB_WORKSPACE/simuandroid-multi-nightly.apk

    - name: Update binaries of Nightly Release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./simuandroid-multi-nightly.apk
        asset_name: simuandroid-multi-nightly.apk
        tag: Nightly
        overwrite: true