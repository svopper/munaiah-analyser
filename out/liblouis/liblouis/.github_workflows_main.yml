name: Make check/distcheck

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build with UCS2

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt-get update -qq && sudo apt-get install -y libyaml-dev texinfo texlive
    - name: Autogen && configure
      run: |
        ./autogen.sh
        ./configure
    - name: Make
      run: make
    - name: Make check
      run: make check
    - name: Store the test suite log
      if: ${{ always() }} # store the test suite log even if the tests failed
      uses: actions/upload-artifact@v2
      with:
        name: test-suite-ucs2.log
        path: tests/test-suite.log
    - name: Make distcheck
      run: make distcheck

  build-ucs4:
    name: Build with UCS4

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt-get update -qq && sudo apt-get install -y libyaml-dev texinfo texlive
    - name: autogen && configure
      run: |
        ./autogen.sh
        ./configure --enable-ucs4
    - name: Make
      run: make
    - name: Make check
      run: make check
    - name: Store the test suite log
      if: ${{ always() }} # store the test suite log even if the tests failed
      uses: actions/upload-artifact@v2
      with:
        name: test-suite-ucs4.log
        path: tests/test-suite.log
    - name: Make distcheck
      run: make distcheck
    - name: Install Go
      run: sudo apt-get install -y golang
    - name: Run the metadata test
      run: make -C extra/generate-display-names
    - name: Store the log
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: generate-display-names.log
        path: extra/generate-display-names/generate.log
