name: CI

on:
  push:
    branches-ignore:
      - "releases/**"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['2.7']
        plone-version: 
          - '4.1'
          - '4.3'
          - '5.0'
          - '5.1'
        #   - '5.2'
        # include:
        #   - plone-version: 5.2
        #     python-version: 3.7
        #   - plone-version: 5.2
        #     python-version: 3.8
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          # sudo apt-get update
          # sudo apt-get install -y build-essentials
          sudo apt-get install libxml2-dev libxslt-dev python-dev
          # sudo apt-get install py-pip  
          pip install \
            virtualenv wheel
      - uses: nanasess/setup-chromedriver@master
        # with:
        #   # Optional: do not specify to match Chrome's version
        #   chromedriver-version: '77.0.3865.40'            
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/buildout-cache
            ~/extends
            ~/.cache/pip
          # key: ${{ runner.os }}-buildout-${{ hashFiles('**/*.cfg') }}-${{ matrix.plone-version }}-${{ matrix.python-version }}
          key: ${{ runner.os }}-buildout-${{ matrix.plone-version }}-${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-buildout-
      - name: setup buildout cache
        run: |
            mkdir -p ~/buildout-cache/{eggs,downloads}
            mkdir ~/.buildout
            echo "[buildout]" > $HOME/.buildout/default.cfg
            echo "download-cache = $HOME/buildout-cache/downloads" >> $HOME/.buildout/default.cfg
            echo "eggs-directory = $HOME/buildout-cache/eggs" >> $HOME/.buildout/default.cfg
      - name: bootstrap buildout
        run: |
          ./bootstrap.sh test-${{ matrix.plone-version }}.x.cfg
          ls -al
      - name: buildout
        run: |
          bin/buildout -t 10 -Nc test-${{ matrix.plone-version }}.x.cfg
          bin/pip install zest.pocompile
          bin/pocompile src
      - name: test
        run: |
            export DISPLAY=:99.0
            chromedriver --url-base=/wd/hub &
            sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
            sleep 3
            bin/test --all 
      - name: code-analysis
        run: echo "${{ matrix.plone-version }}" | grep 5.1 || bin/code-analysis  
      - name: createcoverage
        run: |
            bin/createcoverage
            bin/coverage json -i
      - name: Coveralls
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel: true
          flag-name: ${{ matrix.plone-version }}-${{ matrix.python-version }}     
      # - name: Archive test results
      #   if: failure()
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: test_results
      #     path: ./test

  coveralls_finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true


