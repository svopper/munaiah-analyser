name: CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v1
    - name: Install Build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install build-essential flex bison
        sudo apt-get install texinfo
        sudo apt-get install libmpc-dev libgmp-dev libmpfr-dev
        sudo apt-get install grub-pc
        sudo apt-get install qemu-system-i386
        sudo apt-get install qemu-utils

    - name: Generate Configuration
      run: make configure

    - name: Install Kernel Headers
      run: make install-kernel-headers

    - uses: actions/cache@v1
      id: cache
      with:
        path: bin/toolchain
        key: protura-host-toolchain-3

    - name: Build GCC Cross Compiler
      run: ./scripts/ci/travis_gcc.sh

    - name: Bulid Kernel
      run: make kernel -j5

    - name: Archive kernel
      uses: actions/upload-artifact@v2
      with:
        name: Kernel
        path: ./bin/kernel/

    - name: Build ed
      if: startsWith(github.ref, 'refs/tags/v')
      run: make extra-ed -j5

    - name: Build Vim
      if: startsWith(github.ref, 'refs/tags/v')
      run: make extra-vim -j5

    - name: Build Binutils
      if: startsWith(github.ref, 'refs/tags/v')
      run: make extra-binutils -j5

    - name: Build Hosted GCC
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        make extra-gmp -j5
        make extra-mpfr -j5
        make extra-mpc -j5
        ./scripts/ci/travis_extra_gcc.sh

    - name: Build Less
      if: startsWith(github.ref, 'refs/tags/v')
      run: make extra-less -j5

    - name: Build gbemuc
      if: startsWith(github.ref, 'refs/tags/v')
      run: make extra-gbemuc -j5

    - name: Build raw disk image
      id: build-os
      run: make disk

    - name: Setup tuntap device
      if: always() && steps.build-os.outcome == 'success'
      run: ./scripts/ci/setup_tuntap.sh

    - name: Run Kernel Tests
      if: always() && steps.build-os.outcome == 'success'
      run: make check-kernel

    - name: Run UAPI Tests
      if: always() && steps.build-os.outcome == 'success'
      run: make check-uapi

    - name: Run PCI Tests
      if: always() && steps.build-os.outcome == 'success'
      run: make check-pci

    - name: Run EXT2 Tests
      if: always() && steps.build-os.outcome == 'success'
      run: make check-ext2 -j3

    - name: Run Symbol Table Tests
      if: always() && steps.build-os.outcome == 'success'
      run: make check-symbol-table

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Test-Results
        path: ./bin/test_results/

    - name: Build extra disk images
      if: startsWith(github.ref, 'refs/tags/v')
      run: make disk-other

    - name: Create release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: |
          ./bin/kernel/vmprotura
          ./bin/kernel/vmprotura.sym
          ./bin/imgs/disk.vdi
          ./bin/imgs/disk.img
          ./bin/imgs/disk.vhd
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
