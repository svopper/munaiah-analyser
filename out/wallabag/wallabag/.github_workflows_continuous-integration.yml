name: "CI"

on:
  pull_request:
  push:
    branches:
      - master
      - 2.*

env:
  PGPASSWORD: wallabagrocks
  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  phpunit:
    name: "PHP ${{ matrix.php }} using ${{ matrix.database }}"
    runs-on: "ubuntu-18.04"
    services:
      rabbitmq:
        image: rabbitmq:3-alpine
        ports:
          - 5672:5672
      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379

    strategy:
      fail-fast: false
      matrix:
        php:
          - "7.2"
          - "7.3"
          - "7.4"
        database:
          - "sqlite"
          - "mysql"
          - "pgsql"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 2

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          coverage: none
          tools: pecl, composer:v1
          extensions: json, pdo, pdo_mysql, pdo_sqlite, pdo_pgsql, curl, imagick, pgsql, gd, tidy
          ini-values: "date.timezone=Europe/Paris"

      - name: "Setup MySQL"
        if: "${{ matrix.database == 'mysql' }}"
        run: |
          sudo systemctl start mysql.service
          sudo mysql -u root -proot -e "CREATE DATABASE wallabag_test"

      - name: "Setup PostgreSQL"
        if: "${{ matrix.database == 'pgsql' }}"
        run: |
          sudo systemctl start postgresql
          sudo -u postgres psql -d template1 -c "CREATE USER wallabag WITH PASSWORD 'wallabagrocks' CREATEDB"
          createdb -h localhost -p 5432 -U wallabag wallabag_test
          pg_isready -d wallabag_test -h localhost -p 5432 -U wallabag

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v1"
        with:
          composer-options: "--optimize-autoloader --prefer-dist"

      - name: "Prepare database"
        run: "make prepare DB=${{ matrix.database }}"

      - name: "Prepare fixtures"
        run: "make fixtures"

      - name: "Run PHPUnit"
        run: "php bin/simple-phpunit -v"
