# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Python package (${{ matrix.os }} py=${{ matrix.python-version }} np=${{ matrix.numpy-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"] # , "windows-latest"]
        python-version: [3.8]
        numpy-version: [1.19]
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.2.2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install setuptools wheel
        pip install numpy==${{ matrix.numpy-version }} cython
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install package
      run: |
        pip install .    
    - name: Test with pytest
      run: |
        pip install pytest
        pytest
    - name: Package source and wheels
      run: |
        python setup.py sdist bdist_wheel
    - name: Upload wheel artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.python-version }}-wheels
        path: dist/*.whl
    - name: Publish package to PyPI
      if: github.repository == 'mrahnis/orangery' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1.4
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
