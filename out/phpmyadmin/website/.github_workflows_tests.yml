name: Run tests

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - master

jobs:
    test-python:
        name: Test on python ${{ matrix.python-version }} and ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                python-version: ["2.x"]
                os: [ubuntu-latest]
        steps:
            - uses: actions/checkout@v2
            - name: Use python ${{ matrix.python-version }}
              uses: actions/setup-python@v2
              with:
                python-version: ${{ matrix.python-version }}
            - name: Install requirements
              run: pip install -r requirements-test.txt
            # https://code.djangoproject.com/ticket/29182
            # https://github.com/django/django/pull/11986
            # https://patch-diff.githubusercontent.com/raw/django/django/pull/11986.diff
            - name: Apply a patch for ticket 29182 from Django
              run: |
                set -x
                cd "$(python -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')"
                sed -i "/PRAGMA foreign_keys = 0/a \ \ \ \ \ \ \ \ \ \ \ \ c.execute\('PRAGMA legacy_alter_table = ON'\)" ./django/db/backends/sqlite3/schema.py
                sed -i "/PRAGMA foreign_keys = %s/a \ \ \ \ \ \ \ \ \ \ \ \ c.execute\('PRAGMA legacy_alter_table = OFF'\)" ./django/db/backends/sqlite3/schema.py
                head -n 50 ./django/db/backends/sqlite3/schema.py
                cd - > /dev/null
            - name: Run the migrations
              run: ./manage.py migrate
            - name: Run python checks
              run: ./manage.py check
            - name: Run python tests and coverage
              run: coverage run --source=. ./manage.py test
            - name: Send coverage
              uses: codecov/codecov-action@v1
