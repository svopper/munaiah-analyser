name: CI build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
      fail-fast: false
    steps:
      - name: Support longpaths
        run: git config --system core.longpaths true
        if: matrix.os == 'windows-latest'
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Init and update otel submodule
        run: |
          git submodule init
          git submodule update
      - name: Restore cache
        uses: burrunan/gradle-cache-action@v1
      - name: Cache gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Build otel-fork
        working-directory: otel
        # javadoc fails sporadically fetching https://docs.oracle.com/javase/8/docs/api/
        run: ./gradlew publishToMavenLocal -x javadoc --stacktrace
      - name: Test
        # TODO enable build cache, either --build-cache here, or org.gradle.caching=true in gradle.properties
        run: ./gradlew check --stacktrace

  setup-smoke-test-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 11 for running Gradle
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - id: set-matrix
        # "grep -v skipWinNative" is used to skip the warning message "Skipping build of :etw:native because skipWinNative=true"
        run: echo "::set-output name=matrix::{\"module\":[\"$(./gradlew -q :test:smoke:testApps:listTestApps | grep -v skipWinNative | xargs echo | sed 's/ /","/g')\"]}"

  smoke-test:
    needs: setup-smoke-test-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.setup-smoke-test-matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Init and update otel submodule
        run: |
          git submodule init
          git submodule update
      - name: Restore cache
        uses: burrunan/gradle-cache-action@v1
        with:
          read-only: true
      - name: Cache gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Build otel-fork
        working-directory: otel
        # javadoc fails sporadically fetching https://docs.oracle.com/javase/8/docs/api/
        run: ./gradlew publishToMavenLocal -x javadoc --stacktrace
      - name: Test
        # TODO enable build cache, either --build-cache here, or org.gradle.caching=true in gradle.properties
        run: ./gradlew ${{ matrix.module }}:smokeTest

  accept-pr:
    needs: [ build, smoke-test ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      # run this action to get workflow conclusion
      # You can get conclusion by env (env.WORKFLOW_CONCLUSION)
      - uses: technote-space/workflow-conclusion-action@v2
      - name: Fail build
        if: env.WORKFLOW_CONCLUSION == 'failure' # notify only if failure
        run: exit 1
