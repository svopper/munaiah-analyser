name: Build CI wheels

on:
  push:
    branches:
      - main
      - v[0-9]+.[0-9]+.x
    tags:
      - v*

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      min-numpy-version: "1.17.3"
      min-numpy-hash: "b6/d6/be8f975f5322336f62371c9abeb936d592c98c047ad63035f1b38ae08efe"
      CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-10.15]
        cibw_archs: ["auto"]
        include:
          - os: ubuntu-18.04
            cibw_archs: "aarch64"

    steps:
      - name: Set up QEMU
        if: matrix.cibw_archs == 'aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - uses: actions/cache@v2
        id: numpy-cache
        with:
          path: numpy-aarch64-cache/
          key: numpy-${{ matrix.cibw_archs }}-cache-${{ env.min-numpy-version }}

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==2.1.1

      - name: Build minimum NumPy for aarch64
        if: matrix.cibw_archs == 'aarch64' && steps.numpy-cache.outputs.cache-hit != 'true'
        run: |
          wget https://files.pythonhosted.org/packages/${{ env.min-numpy-hash }}/numpy-${{ env.min-numpy-version }}.zip
          unzip numpy-${{ env.min-numpy-version }}.zip
          cd numpy-${{ env.min-numpy-version }}
          python -m cibuildwheel --output-dir ../numpy-aarch64-cache
        env:
          CIBW_BUILD: "cp37-* cp38-*"
          CIBW_ARCHS: aarch64

      - name: Build wheels for CPython 3.10
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp310-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_BEFORE_BUILD: pip install certifi numpy==1.21.3
          MPL_DISABLE_FH4: "yes"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython 3.9
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp39-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          CIBW_BEFORE_BUILD: pip install certifi numpy==1.19.3
          MPL_DISABLE_FH4: "yes"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for CPython
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp37-* cp38-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          CIBW_BEFORE_BUILD: pip install certifi; pip install --find-links=numpy-aarch64-cache/ numpy==${{ env.min-numpy-version }}
          MPL_DISABLE_FH4: "yes"
          CIBW_ARCHS: ${{ matrix.cibw_archs }}

      - name: Build wheels for PyPy
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "pp37-*"
          CIBW_BEFORE_BUILD: pip install certifi numpy==${{ env.min-numpy-version }}
          CIBW_ARCHS: ${{ matrix.cibw_archs }}
          PIP_USE_FEATURE: in-tree-build
        if: matrix.cibw_archs != 'aarch64'

      - name: Validate that LICENSE files are included in wheels
        run: |
          python ./ci/check_wheel_licenses.py

      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist/*.whl
