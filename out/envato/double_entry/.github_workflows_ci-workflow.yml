name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - ruby: 2.5
            gemfile: Gemfile.rails-5.0.x
            db: mysql
          - ruby: 2.5
            gemfile: Gemfile.rails-5.1.x
            db: mysql
          - ruby: 2.6
            gemfile: Gemfile.rails-5.2.x
            db: mysql
          - ruby: 2.7
            gemfile: Gemfile.rails-6.0.x
            db: mysql
          - ruby: 2.7
            gemfile: Gemfile.rails-6.0.x
            db: sqlite
          - ruby: 2.7
            gemfile: Gemfile.rails-6.0.x
            db: postgres
          - ruby: 3.0
            gemfile: Gemfile.rails-6.0.x
            db: mysql
          - ruby: 3.0
            gemfile: Gemfile.rails-6.0.x
            db: sqlite
          - ruby: 3.0
            gemfile: Gemfile.rails-6.0.x
            db: postgres
          - ruby: 2.7
            gemfile: Gemfile.rails-6.1.x
            db: mysql
          - ruby: 2.7
            gemfile: Gemfile.rails-6.1.x
            db: sqlite
          - ruby: 2.7
            gemfile: Gemfile.rails-6.1.x
            db: postgres
          - ruby: 3.0
            gemfile: Gemfile.rails-6.1.x
            db: mysql
          - ruby: 3.0
            gemfile: Gemfile.rails-6.1.x
            db: sqlite
          - ruby: 3.0
            gemfile: Gemfile.rails-6.1.x
            db: postgres
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/spec/support/gemfiles/${{ matrix.gemfile }}
      DB: ${{ matrix.db }}
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: double_entry_test
          MYSQL_USER: mysql
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: double_entry_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - run: cp spec/support/database.ci.yml spec/support/database.yml
      - run: bundle exec rspec
      - run: ruby script/jack_hammer -t 2000
