name: CI
on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+'
  pull_request:
    branches:
      - master
      - '[0-9]+.[0-9]+'
  schedule:
    - cron: '0 4 * * *'
jobs:
  Test:
    name: Run tests
    strategy:
      matrix:
        os: [ubuntu-latest]
        jdk: [8, 17]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-java-${{ matrix.jdk }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.jdk }}
          distribution: temurin
      - name: Fetch container
        run: docker pull grokzen/redis-cluster:latest
      - name: Run redis test cluster
        run: docker run -d -e 'IP=127.0.0.1' -e 'STANDALONE=true' -e 'SENTINEL=true' -p '7000-7007:7000-7007' -p '5000-5002:5000-5002' grokzen/redis-cluster:latest
      - name: Run tests
        run: mvn -s .github/maven-ci-settings.xml -q clean verify -B
      - name: Publish Unit Test Results
        uses: scacap/action-surefire-report@v1
        if: ${{ always() }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: '**/surefire-reports/*.xml'
          report_individual_runs: true
  Deploy:
    name: Deploy to OSSRH
    if: ${{ github.repository_owner == 'vert-x3' && (github.event_name == 'push' || github.event_name == 'schedule') }}
    needs: Test
    runs-on: ubuntu-latest
    env:
      VERTX_NEXUS_USERNAME: ${{ secrets.VERTX_NEXUS_USERNAME }}
      VERTX_NEXUS_PASSWORD: ${{ secrets.VERTX_NEXUS_PASSWORD }}
    steps:
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-java-${{ matrix.jdk }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: temurin
      - name: Get project version
        run: echo "PROJECT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:evaluate -Dexpression=project.version -B | grep -v '\[')" >> $GITHUB_ENV
      - name: Maven deploy
        if: ${{ endsWith(env.PROJECT_VERSION, '-SNAPSHOT') }}
        run: mvn deploy -s .github/maven-cd-settings.xml -DskipTests -B
