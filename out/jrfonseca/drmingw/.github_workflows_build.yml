name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [mingw64, mingw32]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive
    - name: Cache Downloads
      id: cache-downloads
      uses: actions/cache@v2
      with:
        path: downloads/*.7z
        key: ${{ runner.os }}-${{ matrix.target }}-mingw-10.2.0-dbghelp-10.0.18362.1
    - run: Get-Host | Select-Object Version
    - run: python -m pip install gcovr codecov
    - name: Build
      run: .\ci\build.ps1 -target ${{ matrix.target }} -coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Upload artifact
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v2
      with:
        name: drmingw-${{ matrix.target }}
        path: build/mingw??/drmingw-*.7z
        if-no-files-found: error

  build-cross:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
        submodules: recursive
    - run: sudo dpkg --add-architecture i386
    - run: sudo apt-get update
    - run: sudo apt-get install -qq -y --install-recommends mingw-w64 ninja-build cmake xinit xvfb wine wine64 wine32:i386
    - run: ci/build.sh

  # See https://github.com/actions/upload-release-asset
  release:
    # https://github.community/t/trigger-job-on-tag-push-only/18076/2
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: windows-latest
    steps:
    - uses: actions/download-artifact@v2
      id: download
      with:
        path: artifacts
    - run: Get-ChildItem -Recurse "${{ steps.download.outputs.download-path }}"
    - name: Asset names
      id: assets
      run: |
        $asset32 = Get-Item "${{ steps.download.outputs.download-path }}\drmingw-mingw32\mingw32\*.7z"
        $asset64 = Get-Item "${{ steps.download.outputs.download-path }}\drmingw-mingw64\mingw64\*.7z"
        Write-Host "::set-output name=mingw32-path::$($asset32.FullName)"
        Write-Host "::set-output name=mingw64-path::$($asset64.FullName)"
        Write-Host "::set-output name=mingw32-name::$($asset32.Name)"
        Write-Host "::set-output name=mingw64-name::$($asset64.Name)"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
    - name: Upload Release Asset (32bits)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.assets.outputs.mingw32-path }}
        asset_name: ${{ steps.assets.outputs.mingw32-name }}
        asset_content_type: application/x-7z-compressed
    - name: Upload Release Asset (64bits)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.assets.outputs.mingw64-path }}
        asset_name: ${{ steps.assets.outputs.mingw64-name }}
        asset_content_type: application/x-7z-compressed
