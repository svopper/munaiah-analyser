name: "PyVAST Python Egg"
on:
  push:
    paths:
      - 'pyvast/**'
      - '.github/workflows/pyvast.yml'
      - '.github/workflows/style.yml'
  release:
    types: published
env:
  DEBIAN_FRONTEND: noninteractive
jobs:
  egg-install:
    name: Egg Installation
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.7, 3.8]
        os: [ubuntu-20.04, macOS-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Dist Environment
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools

      - name: Install Application and Plugins
        working-directory: pyvast
        run: |
          make clean build

      - name: Package Application
        working-directory: pyvast
        run: |
          make clean dist

  egg-release:
    name: Egg Release
    if: github.event_name == 'release'
    needs: egg-install
    runs-on: ubuntu-20.04
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Set up Python 3.8
        uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8

      - name: Set up Dist Environment
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools twine

      - name: Package Application
        working-directory: pyvast
        run: |
          make clean dist

      - name: Publish to PyPI
        working-directory: pyvast
        run: |
          python -m twine upload --skip-existing --verbose --non-interactive dist/*
