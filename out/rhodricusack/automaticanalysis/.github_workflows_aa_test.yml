# This is a basic workflow to help you get started with Actions

name: MATLAB test on GitHub-Hosted Runner

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  aatest_ds000114_dartel:
    name: Testing SPM DARTEL

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 52224
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools under $HOME/tools (SPM, FaceMasking)
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install awscli
          sudo apt-get autoremove --purge
          sudo apt-get clean
          sudo journalctl --vacuum-time=3d
          mkdir $HOME/tools
          cd $HOME/tools
          git clone https://github.com/spm/spm12
          wget --no-check-certificate -q https://download.nrg.wustl.edu/pub/FaceMasking/MaskFace.12.27.2017.matlab_required.lin64.zip
          unzip -q MaskFace.12.27.2017.matlab_required.lin64.zip
          rm MaskFace.12.27.2017.matlab_required.lin64.zip
          mv lin64.Dec2017 FaceMasking
      
      - name: Install templates (FSL)
        shell: bash
        run: |
          cd $HOME/tools
          wget -q http://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.5-centos7_64.tar.gz
          tar xzf fsl-6.0.5-centos7_64.tar.gz fsl/data/standard
          rm fsl-6.0.5-centos7_64.tar.gz

      - name: Retrive test data under $HOME/data/aa_demo
        run: |
          mkdir -p $HOME/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01 $HOME/data/aa_demo/ds000114/sub-01 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Configure aa
        run: |
          echo "Free space:"
          df -h
          mkdir $HOME/.aa
          cp $GITHUB_WORKSPACE/.github/workflows/aap_parameters_defaults_GitHub.xml $HOME/.aa/aap_parameters_user.xml
          mkdir $HOME/projects

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')), aa_ver5, SPM = spmClass(fullfile(getenv('HOME'),'tools','spm12')), SPM.load, aa_test('glob','aatest_ds000114_dartel')

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: aatest_ds000114_dartel
          path: |
            ~/projects/

  aatest_ds000114_diffusion:
    name: Testing Diffusion (with FSL)

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 52224
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools under $HOME/tools (SPM, FSL, FaceMasking)
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install awscli
          sudo apt-get install libtinfo5 libtinfo6 dc
          sudo apt-get autoremove --purge
          sudo apt-get clean
          sudo journalctl --vacuum-time=3d
          mkdir $HOME/tools
          cd $HOME/tools
          git clone https://github.com/spm/spm12          
          wget -q http://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.5-centos7_64.tar.gz
          tar xzf fsl-6.0.5-centos7_64.tar.gz
          rm fsl-6.0.5-centos7_64.tar.gz
          $HOME/tools/fsl/etc/fslconf/post_install.sh -f $HOME/tools/fsl
          mkdir $HOME/tools/config
          sed 's/\r$//' $GITHUB_WORKSPACE/.github/workflows/fsl_bash > $HOME/tools/config/fsl_bash
          source $HOME/tools/config/fsl_bash
          wget --no-check-certificate -q https://download.nrg.wustl.edu/pub/FaceMasking/MaskFace.12.27.2017.matlab_required.lin64.zip
          unzip -q MaskFace.12.27.2017.matlab_required.lin64.zip
          rm MaskFace.12.27.2017.matlab_required.lin64.zip
          mv lin64.Dec2017 FaceMasking

      - name: Retrive test data under $HOME/data/aa_demo
        run: |
          mkdir -p $HOME/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01 $HOME/data/aa_demo/ds000114/sub-01 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Configure aa
        run: |
          echo "Free space:"
          df -h
          mkdir $HOME/.aa
          cp $GITHUB_WORKSPACE/.github/workflows/aap_parameters_defaults_GitHub.xml $HOME/.aa/aap_parameters_user.xml
          mkdir $HOME/projects

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')), aa_ver5, SPM = spmClass(fullfile(getenv('HOME'),'tools','spm12')), SPM.load, aa_test('glob','aatest_ds000114_diffusion')

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: aatest_ds000114_diffusion
          path: |
            ~/projects/

  aatest_ds000114_fmri:
    name: Testing fMRI

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 52224
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools under $HOME/tools (SPM, FaceMasking)
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install awscli
          sudo apt-get autoremove --purge
          sudo apt-get clean
          sudo journalctl --vacuum-time=3d
          mkdir $HOME/tools
          cd $HOME/tools
          git clone https://github.com/spm/spm12
          wget --no-check-certificate -q https://download.nrg.wustl.edu/pub/FaceMasking/MaskFace.12.27.2017.matlab_required.lin64.zip
          unzip -q MaskFace.12.27.2017.matlab_required.lin64.zip
          rm MaskFace.12.27.2017.matlab_required.lin64.zip
          mv lin64.Dec2017 FaceMasking

      - name: Install templates (FSL)
        shell: bash
        run: |
          cd $HOME/tools
          wget -q http://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.5-centos7_64.tar.gz
          tar xzf fsl-6.0.5-centos7_64.tar.gz fsl/data/standard
          rm fsl-6.0.5-centos7_64.tar.gz

      - name: Retrive test data under $HOME/data/aa_demo
        run: |
          mkdir -p $HOME/data/aa_demo
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "task-*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114 $HOME/data/aa_demo/ds000114 --quiet --recursive --exclude "*" --include "dwi*" --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-01 $HOME/data/aa_demo/ds000114/sub-01 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-02 $HOME/data/aa_demo/ds000114/sub-02 --quiet --recursive --no-sign-request
          aws s3 cp s3://openneuro.org/ds000114/sub-03 $HOME/data/aa_demo/ds000114/sub-03 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Configure aa
        run: |
          echo "Free space:"
          df -h
          mkdir $HOME/.aa
          cp $GITHUB_WORKSPACE/.github/workflows/aap_parameters_defaults_GitHub.xml $HOME/.aa/aap_parameters_user.xml
          mkdir $HOME/projects

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')), aa_ver5, SPM = spmClass(fullfile(getenv('HOME'),'tools','spm12')), SPM.load, aa_test('glob','aatest_ds000114_fmri')

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: aatest_ds000114_fmri
          path: |
            ~/projects/

  aatest_ds002737_deface:
    name: Testing (Freesurfer) Deface and FaceMasking

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 52224
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      
      - name: Check out repository under $GITHUB_WORKSPACE
        uses: actions/checkout@v2

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1
        with:
          # MATLAB release to set up R2020a
          release: R2020a

      - name: Install tools under $HOME/tools (SPM, FSL, FreeSurfer, FaceMasking)
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install awscli
          sudo apt-get install libtinfo5 libtinfo6 dc
          sudo apt-get autoremove --purge
          sudo apt-get clean
          sudo journalctl --vacuum-time=3d
          mkdir $HOME/tools
          cd $HOME/tools
          git clone https://github.com/spm/spm12          
          wget -q http://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.5-centos7_64.tar.gz
          tar xzf fsl-6.0.5-centos7_64.tar.gz
          rm fsl-6.0.5-centos7_64.tar.gz
          $HOME/tools/fsl/etc/fslconf/post_install.sh -f $HOME/tools/fsl
          mkdir $HOME/tools/config
          sed 's/\r$//' $GITHUB_WORKSPACE/.github/workflows/fsl_bash > $HOME/tools/config/fsl_bash
          source $HOME/tools/config/fsl_bash
          wget -q https://ftp.nmr.mgh.harvard.edu/pub/dist/freesurfer/7.1.0/freesurfer-linux-centos7_x86_64-7.1.0.tar.gz
          tar xzf freesurfer-linux-centos7_x86_64-7.1.0.tar.gz
          rm freesurfer-linux-centos7_x86_64-7.1.0.tar.gz
          echo -e "tibor.auer@gmail.com\n7061\n *Ccpi6x7PAIeQ\n FS96pPK5vW.0g" > $HOME/tools/freesurfer/license.txt
          wget --no-check-certificate -q https://download.nrg.wustl.edu/pub/FaceMasking/MaskFace.12.27.2017.matlab_required.lin64.zip
          unzip -q MaskFace.12.27.2017.matlab_required.lin64.zip
          rm MaskFace.12.27.2017.matlab_required.lin64.zip
          mv lin64.Dec2017 FaceMasking

      - name: Install templates (FreeSurfer MRI Deface templates, MNI152lin_T1_1mm)
        shell: bash
        run: |
          mkdir -p $HOME/tools/templates
          wget -q -P $HOME/tools/templates https://surfer.nmr.mgh.harvard.edu/pub/dist/mri_deface/talairach_mixed_with_skull.gca.gz
          wget -q -P $HOME/tools/templates https://surfer.nmr.mgh.harvard.edu/pub/dist/mri_deface/face.gca.gz
          gunzip $HOME/tools/templates/*
          mv $HOME/tools/templates/talairach_mixed_with_skull.gca $HOME/tools/templates/freesurfer_deface_talairach_mixed_with_skull.gca
          mv $HOME/tools/templates/face.gca $HOME/tools/templates/freesurfer_deface_face.gca
          cp /home/runner/tools/fsl/data/standard/MNI152_T1_1mm.nii.gz /home/runner/tools/fsl/data/standard/MNI152lin_T1_1mm.nii.gz

      - name: Retrive test data under $HOME/data/aa_demo
        run: |
          mkdir -p $HOME/data/aa_demo
          aws s3 cp s3://openneuro.org/ds002737/sub-01/ses-03 $HOME/data/aa_demo/ds002737/sub-01/ses-03 --quiet --recursive --no-sign-request
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true

      - name: Configure aa
        run: |
          echo "Free space:"
          df -h
          mkdir $HOME/.aa
          cp $GITHUB_WORKSPACE/.github/workflows/aap_parameters_defaults_GitHub.xml $HOME/.aa/aap_parameters_user.xml
          mkdir $HOME/projects

      - name: Run script
        uses: matlab-actions/run-command@v1
        with:
          command: addpath(getenv('GITHUB_WORKSPACE')), aa_ver5, SPM = spmClass(fullfile(getenv('HOME'),'tools','spm12')), SPM.load, aa_test('glob','aatest_ds002737_deface')

      - name: Archive results
        uses: actions/upload-artifact@v2
        with:
          name: aatest_ds002737_deface
          path: |
            ~/projects/