name: C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-ubuntu-gcc-11:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - {compiler-options: "-Wall -Wextra -std=c++20"}
          - {compiler-options: "-Wall -Wextra -Wno-sign-compare -std=c++20"}
          - {compiler-options: "-fanalyzer -Wno-analyzer-null-dereference -std=c++20"}
    steps:
      - uses: actions/checkout@v2
      - name: install g++
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get install g++-11
      - name: compile
        run: |
          cd cpp
          find . -name '*.cpp' -print0 | xargs -n1 -0 g++-11 ${{ matrix.config.compiler-options }}

  build-ubuntu-gcc-7-warnings:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install g++-7
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get install g++-7
    - name: compile
      run: |
        cd cpp
        find . -name '*.cpp' -print0 | xargs -n1 -0 g++-7 -Wall -Wextra -std=c++17

  build-ubuntu-clang:
    if: ${{ false }}  # disable until "c++/11/ranges:3392:19: error: missing 'typename' prior to dependent type name" is fixed
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install clang
      run: |
        sudo apt-key adv --fetch-keys https://apt.llvm.org/llvm-snapshot.gpg.key
        sudo add-apt-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main"
        sudo apt-get install clang-12
    - name: compile
      run: |
        cd cpp
        find . -name '*.cpp' -print0 | xargs -n1 -0 clang++-12 -Wall -Wextra -std=c++2a

  build-macos-clang:
    runs-on: macos-latest
    strategy:
      matrix:
        config:
          - {compiler-options: "-Wall -Wextra -std=c++2a -isystem"}
          - {compiler-options: "-Wall -Wextra -Wno-sign-compare -std=c++2a -isystem"}
    steps:
      - uses: actions/checkout@v2
      - name: compile
        run: |
          cd cpp
          mkdir bits
          echo $'#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <deque>\n#include <stack>\n#include <iostream>\n#include <iomanip>\n#include <complex>\n#include <cassert>\n#include <random>\n#include <chrono>\n#include <functional>\n#include <array>\n#include <bitset>\n#include <numeric>\n' > bits/stdc++.h
          find . -name '*.cpp' -print0 | xargs -n1 -0 clang++ ${{ matrix.config.compiler-options }} .

  build-windows-visual-cpp:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: compile
      shell: cmd
      run: |
        call  "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
        cd cpp
        mkdir bits
        C:\msys64\usr\bin\echo.exe -e '#include \74vector\76\n#include \74set\76\n#include \74map\76\n#include \74unordered_set\76\n#include \74unordered_map\76\n#include \74queue\76\n#include \74deque\76\n#include \74stack\76\n#include \74iostream\76\n#include \74iomanip\76\n#include \74complex\76\n#include \74cassert\76\n#include \74random\76\n#include \74chrono\76\n#include \74functional\76\n#include \74array\76\n#include \74bitset\76\n#include \74numeric\76\n' > bits\stdc++.h
        C:\msys64\usr\bin\find . -name '*.cpp' -print0 | C:\msys64\usr\bin\xargs -n1 -0 cl //std:c++17 //EHsc //I .
