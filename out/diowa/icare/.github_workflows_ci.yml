name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Ruby specs
    runs-on: ubuntu-latest

    env:
      RAILS_ENV: test

    services:
      db:
        image: postgis/postgis:12-3.1-alpine
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports: ['6379:6379']
        options: --entrypoint redis-server

    steps:
    - name: Install GEOS
      run: |
        sudo apt-get update
        sudo apt-get -yq --no-install-suggests --no-install-recommends install libgeos-dev
    - uses: actions/checkout@v2
    - uses: nanasess/setup-chromedriver@v1.0.1
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0.2'
        bundler-cache: true
        cache-version: 1
    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run:
        echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Yarn
      run:  yarn
    - name: Set up Database
      run: bundle exec rails db:prepare
    - name: Check GEOS support
      run: bundle exec rails rgeo_supports_geos
    - name: Run specs
      run: bundle exec rake spec
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: 'coverage/lcov.info'
