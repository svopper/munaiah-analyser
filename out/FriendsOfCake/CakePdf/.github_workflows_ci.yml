name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  testsuite:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.2', '7.4', '8.0']
        prefer-lowest: ['']
        include:
          - php-version: '7.2'
            prefer-lowest: 'prefer-lowest'

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl
        coverage: pcov

    - name: Install packages
      run: |
        sudo apt install xfonts-base xfonts-75dpi
        wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.bionic_amd64.deb
        sudo dpkg -i wkhtmltox_0.12.6-1.bionic_amd64.deb
        sudo apt install -f
        wkhtmltopdf --version

    - name: Composer install
      run: |
        if ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
          composer update --prefer-lowest --prefer-stable
        elif [[ ${{ matrix.php-version }} == '8.0' ]]; then
          composer remove --dev mpdf/mpdf dompdf/dompdf
          composer install
        else
          composer install
        fi

    - name: Setup problem matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Run PHPUnit
      run: |
        if [[ ${{ matrix.php-version }} == '7.4' ]]; then
          vendor/bin/phpunit --verbose --coverage-clover=coverage.xml
        else
          vendor/bin/phpunit
        fi

    - name: Code Coverage Report
      if: matrix.php-version == '7.4'
      uses: codecov/codecov-action@v1

  cs-stan:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl
        coverage: none
        tools: cs2pr, psalm:^4.3, phpstan:^0.12

    - name: Composer Install
      run: composer install

    - name: Run phpcs
      run: vendor/bin/phpcs -q --report=checkstyle --standard=vendor/cakephp/cakephp-codesniffer/CakePHP src/ tests/ | cs2pr

    - name: Run psalm
      if: success() || failure()
      run: psalm --output-format=github

    - name: Run phpstan
      if: success() || failure()
      run: phpstan analyse
