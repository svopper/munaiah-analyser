name: CI

on:
  push:
    branches:
      - main
      - 'releases/*'
  pull_request:
    branches:
      - '*'

env:
  ORG_GRADLE_PROJECT_enableTestDistribution: true
  ORG_GRADLE_PROJECT_junitBuildCacheUsername: ${{ secrets.BUILD_CACHE_USERNAME }}
  ORG_GRADLE_PROJECT_junitBuildCachePassword: ${{ secrets.BUILD_CACHE_PASSWORD }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Codecov needs fetch-depth > 1
        fetch-depth: 2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '8'
    - name: Prepare JDK8 env var
      shell: bash
      run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Test and coverage
      uses: gradle/gradle-build-action@v2
      with:
        arguments: |
          -Porg.gradle.java.installations.auto-download=false
          -PenableJaCoCo
          -Dplatform.tooling.support.tests.enabled=true
          -Dscan.tag.Linux
          javaToolchains
          build
          jacocoRootReport
    - name: Upload Test Distribution trace files
      uses: actions/upload-artifact@v2
      with:
        name: Test Distribution trace files
        path: '**/build/test-results/*/trace.json'
    - name: Upload to Codecov.io
      uses: codecov/codecov-action@v2

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '8'
    - name: Prepare JDK8 env var
      shell: bash
      run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Test
      uses: gradle/gradle-build-action@v2
      with:
        arguments: |
          -Porg.gradle.java.installations.auto-download=false
          -Dplatform.tooling.support.tests.enabled=true
          -Dscan.tag.Windows
          javaToolchains
          build

  mac:
    name: Mac OS
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '8'
    - name: Prepare JDK8 env var
      shell: bash
      run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Test
      uses: gradle/gradle-build-action@v2
      with:
        arguments: |
          -Porg.gradle.java.installations.auto-download=false
          -Dplatform.tooling.support.tests.enabled=true
          -Dscan.tag.macOS
          javaToolchains
          build

  publish_artifacts:
    name: Publish Snapshot Artifacts
    needs: linux
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'junit-team/junit5' && (startsWith(github.ref, 'refs/heads/releases/') || github.ref == 'refs/heads/main')
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Publish
      uses: gradle/gradle-build-action@v2
      env:
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
      with:
        arguments: |
          -Porg.gradle.java.installations.auto-download=false
          -Dscan.tag.Snapshots
          javaToolchains
          publish
          -x check

  update_documentation:
    name: Update Snapshot Documentation
    needs: linux
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'junit-team/junit5' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'
    - name: Install Graphviz
      run: |
        sudo apt-get update
        sudo apt-get install graphviz
    - name: Restore Gradle cache and display toolchains
      uses: gradle/gradle-build-action@v2
      with:
        arguments: |
          -Porg.gradle.java.installations.auto-download=false
          javaToolchains
    - name: Upload Documentation
      env:
        GRGIT_USER: ${{ secrets.GH_TOKEN }}
      run: ./src/publishDocumentationSnapshotOnlyIfNecessary.sh
