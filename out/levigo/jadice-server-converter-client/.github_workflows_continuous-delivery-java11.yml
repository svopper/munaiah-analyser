# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Continuous Delivery Java 11

on:
  push:
    branches: [ java11 ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      JSCC_VERSION_PREFIX: '1.'
      JSCC_TAG_PREFIX: '1.'


    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '11'
        java-package: jdk+fx

    ## Enable Caching
    - uses: actions/cache@v2
      id: cache
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Bump version and create tag
      id: semanticversion
      uses: hennejg/github-tag-action@v4.2.4
      with:
        release_branches: java11
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: ${{ env.JSCC_TAG_PREFIX }}

    - name: Verify and print new build number
      run: |
        if echo '${{ steps.semanticversion.outputs.new_tag }}' |grep -Eq '^${{ env.JSCC_TAG_PREFIX }}[0-9]+[.][0-9]+[.][0-9]+-java11$'; then
          echo New version '${{ steps.semanticversion.outputs.new_version }}', Changelog '${{ steps.semanticversion.outputs.changelog }}'
        else
          echo 'unexpected tag format - aborting'
          exit -1
        fi

    - name: Set version to environment variable
      run: echo "NEW_VERSION=${{ env.JSCC_VERSION_PREFIX }}${{ steps.semanticversion.outputs.new_version }}" >> $GITHUB_ENV

    - name: run mvn set version
      run: |
        mvn -s .m2/settings.xml versions:set -DnewVersion=${{ env.NEW_VERSION }}
      env:
        NEXUS_USERID: ${{secrets.NEXUS_USERID}}
        NEXUS_PASSWORD: ${{secrets.NEXUS_PASSWORD}}

      ## Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
         languages: ${{ matrix.language }}
    
    - name: Build with Maven
      run: mvn -s .m2/settings.xml -gs .m2/settings.xml -B package --file pom.xml
      env:
        NEXUS_USERID: ${{secrets.NEXUS_USERID}}
        NEXUS_PASSWORD: ${{secrets.NEXUS_PASSWORD}}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.NEW_VERSION }}
        release_name: ${{ env.NEW_VERSION }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./target/jadice-server-converter-client-${{ env.NEW_VERSION }}.exe
        asset_name: jadice-server-converter-client-${{ env.NEW_VERSION }}.exe
        asset_content_type: application/octet-stream 
