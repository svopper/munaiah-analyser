name: coverity-scan
on:
#  schedule:
#    - cron: '0 18 * * *' # Daily at 18:00 UTC
  workflow_dispatch:

jobs:
  latest:
    runs-on: ubuntu-latest
    steps:
      - name: Install libraries
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get -q update
          sudo apt-get install g++-10
          sudo apt-get install linux-libc-dev
          sudo apt-get install git
          sudo apt-get install build-essential
          sudo apt-get install automake
          sudo apt-get install libtool
          sudo apt-get install python3.9-dev
          sudo apt-get install zlib1g-dev
          sudo apt-get install gettext
          sudo apt-get install swig
          sudo apt-get install libgstreamer1.0-dev
          sudo apt-get install libgstreamer-plugins-base1.0-dev
          sudo apt-get install libfreetype6-dev
          sudo apt-get install libsigc++-2.0-dev
          sudo apt-get install libfribidi-dev
          sudo apt-get install libssl-dev
          sudo apt-get install libavahi-client-dev
          sudo apt-get install libjpeg-turbo8-dev
          sudo apt-get install libgif-dev

      - uses: actions/checkout@v2
        with:
          ref: '7.0'

      - name: Download Coverity Build Tool
        run: |
          wget -q https://scan.coverity.com/download/cxx/linux64 --post-data "token=$TOKEN&project=openatv/enigma2" -O cov-analysis-linux64.tar.gz
          mkdir cov-analysis-linux64
          tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

      - name: Fixed world writable dirs
        run: |
          chmod go-w $HOME
          sudo chmod -R go-w /usr/share

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Build enigma2 dependencies
        env:
          CC: "gcc-10"
          CXX: "g++-10"
        run: |
          echo "installing libdvbsi++"
          pushd .
          cd /tmp
          git clone --depth 1 git://git.opendreambox.org/git/obi/libdvbsi++.git
          cd libdvbsi++
          autoreconf -i
          ./configure
          make
          sudo make install
          popd
          echo "installing tuxbox"
          pushd .
          cd /tmp
          git clone --depth 1 https://github.com/OpenPLi/tuxtxt.git
          cd tuxtxt/libtuxtxt
          autoreconf -i
          ./configure --with-boxtype=generic DVB_API_VERSION=5
          make
          sudo make install
          cd ../tuxtxt
          autoreconf -i
          ./configure --with-boxtype=generic DVB_API_VERSION=5
          make
          sudo make install
          popd

      - name: configure enigma2
        env:
          CC: "gcc-10"
          CXX: "g++-10"
        run: |
          sed -i 's/include lib main data po tools/include lib main tools/g' Makefile.am
          autoreconf -i
          ./configure --with-libsdl=no --with-boxtype=nobox --enable-dependency-tracking ac_cv_prog_c_openmp=-fopenmp --with-gstversion=1.0 --with-textlcd
          
      - name: Build with cov-build
        env:
          CC: "gcc-10"
          CXX: "g++-10"
        run: |
          pip3 install six
          export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
          cov-configure --template --compiler gcc-10 --comptype gcc
          cov-build --dir cov-int make

      - name: print cov-build
        run: |
          cat ./cov-int/build-log.txt

      - name: Submit the result to Coverity Scan
        run: |
          tar czvf enigma2.tgz cov-int
          curl \
            --form project=openatv/enigma2 \
            --form token=$TOKEN \
            --form email=openatv@gmail.com \
            --form file=@enigma2.tgz \
            --form version=7.0 \
            --form description="`git rev-parse --abbrev-ref HEAD` `git rev-parse --short HEAD`" \
            https://scan.coverity.com/builds?project=openatv/enigma2
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}